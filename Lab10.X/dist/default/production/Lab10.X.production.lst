

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Nov 14 22:55:55 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 17/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4321 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000FE0                     bsr             equ	4064
    66   000FE9                     fsr0            equ	4073
    67   000FEA                     fsr0h           equ	4074
    68   000FE9                     fsr0l           equ	4073
    69   000FE1                     fsr1            equ	4065
    70   000FE2                     fsr1h           equ	4066
    71   000FE1                     fsr1l           equ	4065
    72   000FD9                     fsr2            equ	4057
    73   000FDA                     fsr2h           equ	4058
    74   000FD9                     fsr2l           equ	4057
    75   000FEF                     indf0           equ	4079
    76   000FE7                     indf1           equ	4071
    77   000FDF                     indf2           equ	4063
    78   000FF2                     intcon          equ	4082
    79   000000                     nvmcon          equ	0
    80   000FF9                     pcl             equ	4089
    81   000FFA                     pclath          equ	4090
    82   000FFB                     pclatu          equ	4091
    83   000FEB                     plusw0          equ	4075
    84   000FE3                     plusw1          equ	4067
    85   000FDB                     plusw2          equ	4059
    86   000FED                     postdec0        equ	4077
    87   000FE5                     postdec1        equ	4069
    88   000FDD                     postdec2        equ	4061
    89   000FEE                     postinc0        equ	4078
    90   000FE6                     postinc1        equ	4070
    91   000FDE                     postinc2        equ	4062
    92   000FEC                     preinc0         equ	4076
    93   000FE4                     preinc1         equ	4068
    94   000FDC                     preinc2         equ	4060
    95   000FF3                     prod            equ	4083
    96   000FF4                     prodh           equ	4084
    97   000FF3                     prodl           equ	4083
    98   000FD8                     status          equ	4056
    99   000FF5                     tablat          equ	4085
   100   000FF6                     tblptr          equ	4086
   101   000FF7                     tblptrh         equ	4087
   102   000FF6                     tblptrl         equ	4086
   103   000FF8                     tblptru         equ	4088
   104   000FFD                     tosl            equ	4093
   105   000FE8                     wreg            equ	4072
   106   000F80                     PORTA           equ	3968	;# 
   107   000F81                     PORTB           equ	3969	;# 
   108   000F82                     PORTC           equ	3970	;# 
   109   000F83                     PORTD           equ	3971	;# 
   110   000F84                     PORTE           equ	3972	;# 
   111   000F89                     LATA            equ	3977	;# 
   112   000F8A                     LATB            equ	3978	;# 
   113   000F8B                     LATC            equ	3979	;# 
   114   000F8C                     LATD            equ	3980	;# 
   115   000F8D                     LATE            equ	3981	;# 
   116   000F92                     TRISA           equ	3986	;# 
   117   000F92                     DDRA            equ	3986	;# 
   118   000F93                     TRISB           equ	3987	;# 
   119   000F93                     DDRB            equ	3987	;# 
   120   000F94                     TRISC           equ	3988	;# 
   121   000F94                     DDRC            equ	3988	;# 
   122   000F95                     TRISD           equ	3989	;# 
   123   000F95                     DDRD            equ	3989	;# 
   124   000F96                     TRISE           equ	3990	;# 
   125   000F96                     DDRE            equ	3990	;# 
   126   000F9B                     OSCTUNE         equ	3995	;# 
   127   000F9D                     PIE1            equ	3997	;# 
   128   000F9E                     PIR1            equ	3998	;# 
   129   000F9F                     IPR1            equ	3999	;# 
   130   000FA0                     PIE2            equ	4000	;# 
   131   000FA1                     PIR2            equ	4001	;# 
   132   000FA2                     IPR2            equ	4002	;# 
   133   000FA6                     EECON1          equ	4006	;# 
   134   000FA7                     EECON2          equ	4007	;# 
   135   000FA8                     EEDATA          equ	4008	;# 
   136   000FA9                     EEADR           equ	4009	;# 
   137   000FAB                     RCSTA           equ	4011	;# 
   138   000FAB                     RCSTA1          equ	4011	;# 
   139   000FAC                     TXSTA           equ	4012	;# 
   140   000FAC                     TXSTA1          equ	4012	;# 
   141   000FAD                     TXREG           equ	4013	;# 
   142   000FAD                     TXREG1          equ	4013	;# 
   143   000FAE                     RCREG           equ	4014	;# 
   144   000FAE                     RCREG1          equ	4014	;# 
   145   000FAF                     SPBRG           equ	4015	;# 
   146   000FAF                     SPBRG1          equ	4015	;# 
   147   000FB0                     SPBRGH          equ	4016	;# 
   148   000FB1                     T3CON           equ	4017	;# 
   149   000FB2                     TMR3            equ	4018	;# 
   150   000FB2                     TMR3L           equ	4018	;# 
   151   000FB3                     TMR3H           equ	4019	;# 
   152   000FB4                     CMCON           equ	4020	;# 
   153   000FB5                     CVRCON          equ	4021	;# 
   154   000FB6                     ECCP1AS         equ	4022	;# 
   155   000FB7                     ECCP1DEL        equ	4023	;# 
   156   000FB7                     PWM1CON         equ	4023	;# 
   157   000FB8                     BAUDCON         equ	4024	;# 
   158   000FB8                     BAUDCTL         equ	4024	;# 
   159   000FBA                     CCP2CON         equ	4026	;# 
   160   000FBB                     CCPR2           equ	4027	;# 
   161   000FBB                     CCPR2L          equ	4027	;# 
   162   000FBC                     CCPR2H          equ	4028	;# 
   163   000FBD                     CCP1CON         equ	4029	;# 
   164   000FBD                     ECCP1CON        equ	4029	;# 
   165   000FBE                     CCPR1           equ	4030	;# 
   166   000FBE                     CCPR1L          equ	4030	;# 
   167   000FBF                     CCPR1H          equ	4031	;# 
   168   000FC0                     ADCON2          equ	4032	;# 
   169   000FC1                     ADCON1          equ	4033	;# 
   170   000FC2                     ADCON0          equ	4034	;# 
   171   000FC3                     ADRES           equ	4035	;# 
   172   000FC3                     ADRESL          equ	4035	;# 
   173   000FC4                     ADRESH          equ	4036	;# 
   174   000FC5                     SSPCON2         equ	4037	;# 
   175   000FC6                     SSPCON1         equ	4038	;# 
   176   000FC7                     SSPSTAT         equ	4039	;# 
   177   000FC8                     SSPADD          equ	4040	;# 
   178   000FC9                     SSPBUF          equ	4041	;# 
   179   000FCA                     T2CON           equ	4042	;# 
   180   000FCB                     PR2             equ	4043	;# 
   181   000FCB                     MEMCON          equ	4043	;# 
   182   000FCC                     TMR2            equ	4044	;# 
   183   000FCD                     T1CON           equ	4045	;# 
   184   000FCE                     TMR1            equ	4046	;# 
   185   000FCE                     TMR1L           equ	4046	;# 
   186   000FCF                     TMR1H           equ	4047	;# 
   187   000FD0                     RCON            equ	4048	;# 
   188   000FD1                     WDTCON          equ	4049	;# 
   189   000FD2                     HLVDCON         equ	4050	;# 
   190   000FD2                     LVDCON          equ	4050	;# 
   191   000FD3                     OSCCON          equ	4051	;# 
   192   000FD5                     T0CON           equ	4053	;# 
   193   000FD6                     TMR0            equ	4054	;# 
   194   000FD6                     TMR0L           equ	4054	;# 
   195   000FD7                     TMR0H           equ	4055	;# 
   196   000FD8                     STATUS          equ	4056	;# 
   197   000FD9                     FSR2            equ	4057	;# 
   198   000FD9                     FSR2L           equ	4057	;# 
   199   000FDA                     FSR2H           equ	4058	;# 
   200   000FDB                     PLUSW2          equ	4059	;# 
   201   000FDC                     PREINC2         equ	4060	;# 
   202   000FDD                     POSTDEC2        equ	4061	;# 
   203   000FDE                     POSTINC2        equ	4062	;# 
   204   000FDF                     INDF2           equ	4063	;# 
   205   000FE0                     BSR             equ	4064	;# 
   206   000FE1                     FSR1            equ	4065	;# 
   207   000FE1                     FSR1L           equ	4065	;# 
   208   000FE2                     FSR1H           equ	4066	;# 
   209   000FE3                     PLUSW1          equ	4067	;# 
   210   000FE4                     PREINC1         equ	4068	;# 
   211   000FE5                     POSTDEC1        equ	4069	;# 
   212   000FE6                     POSTINC1        equ	4070	;# 
   213   000FE7                     INDF1           equ	4071	;# 
   214   000FE8                     WREG            equ	4072	;# 
   215   000FE9                     FSR0            equ	4073	;# 
   216   000FE9                     FSR0L           equ	4073	;# 
   217   000FEA                     FSR0H           equ	4074	;# 
   218   000FEB                     PLUSW0          equ	4075	;# 
   219   000FEC                     PREINC0         equ	4076	;# 
   220   000FED                     POSTDEC0        equ	4077	;# 
   221   000FEE                     POSTINC0        equ	4078	;# 
   222   000FEF                     INDF0           equ	4079	;# 
   223   000FF0                     INTCON3         equ	4080	;# 
   224   000FF1                     INTCON2         equ	4081	;# 
   225   000FF2                     INTCON          equ	4082	;# 
   226   000FF3                     PROD            equ	4083	;# 
   227   000FF3                     PRODL           equ	4083	;# 
   228   000FF4                     PRODH           equ	4084	;# 
   229   000FF5                     TABLAT          equ	4085	;# 
   230   000FF6                     TBLPTR          equ	4086	;# 
   231   000FF6                     TBLPTRL         equ	4086	;# 
   232   000FF7                     TBLPTRH         equ	4087	;# 
   233   000FF8                     TBLPTRU         equ	4088	;# 
   234   000FF9                     PCLAT           equ	4089	;# 
   235   000FF9                     PC              equ	4089	;# 
   236   000FF9                     PCL             equ	4089	;# 
   237   000FFA                     PCLATH          equ	4090	;# 
   238   000FFB                     PCLATU          equ	4091	;# 
   239   000FFC                     STKPTR          equ	4092	;# 
   240   000FFD                     TOS             equ	4093	;# 
   241   000FFD                     TOSL            equ	4093	;# 
   242   000FFE                     TOSH            equ	4094	;# 
   243   000FFF                     TOSU            equ	4095	;# 
   244   000F80                     PORTA           equ	3968	;# 
   245   000F81                     PORTB           equ	3969	;# 
   246   000F82                     PORTC           equ	3970	;# 
   247   000F83                     PORTD           equ	3971	;# 
   248   000F84                     PORTE           equ	3972	;# 
   249   000F89                     LATA            equ	3977	;# 
   250   000F8A                     LATB            equ	3978	;# 
   251   000F8B                     LATC            equ	3979	;# 
   252   000F8C                     LATD            equ	3980	;# 
   253   000F8D                     LATE            equ	3981	;# 
   254   000F92                     TRISA           equ	3986	;# 
   255   000F92                     DDRA            equ	3986	;# 
   256   000F93                     TRISB           equ	3987	;# 
   257   000F93                     DDRB            equ	3987	;# 
   258   000F94                     TRISC           equ	3988	;# 
   259   000F94                     DDRC            equ	3988	;# 
   260   000F95                     TRISD           equ	3989	;# 
   261   000F95                     DDRD            equ	3989	;# 
   262   000F96                     TRISE           equ	3990	;# 
   263   000F96                     DDRE            equ	3990	;# 
   264   000F9B                     OSCTUNE         equ	3995	;# 
   265   000F9D                     PIE1            equ	3997	;# 
   266   000F9E                     PIR1            equ	3998	;# 
   267   000F9F                     IPR1            equ	3999	;# 
   268   000FA0                     PIE2            equ	4000	;# 
   269   000FA1                     PIR2            equ	4001	;# 
   270   000FA2                     IPR2            equ	4002	;# 
   271   000FA6                     EECON1          equ	4006	;# 
   272   000FA7                     EECON2          equ	4007	;# 
   273   000FA8                     EEDATA          equ	4008	;# 
   274   000FA9                     EEADR           equ	4009	;# 
   275   000FAB                     RCSTA           equ	4011	;# 
   276   000FAB                     RCSTA1          equ	4011	;# 
   277   000FAC                     TXSTA           equ	4012	;# 
   278   000FAC                     TXSTA1          equ	4012	;# 
   279   000FAD                     TXREG           equ	4013	;# 
   280   000FAD                     TXREG1          equ	4013	;# 
   281   000FAE                     RCREG           equ	4014	;# 
   282   000FAE                     RCREG1          equ	4014	;# 
   283   000FAF                     SPBRG           equ	4015	;# 
   284   000FAF                     SPBRG1          equ	4015	;# 
   285   000FB0                     SPBRGH          equ	4016	;# 
   286   000FB1                     T3CON           equ	4017	;# 
   287   000FB2                     TMR3            equ	4018	;# 
   288   000FB2                     TMR3L           equ	4018	;# 
   289   000FB3                     TMR3H           equ	4019	;# 
   290   000FB4                     CMCON           equ	4020	;# 
   291   000FB5                     CVRCON          equ	4021	;# 
   292   000FB6                     ECCP1AS         equ	4022	;# 
   293   000FB7                     ECCP1DEL        equ	4023	;# 
   294   000FB7                     PWM1CON         equ	4023	;# 
   295   000FB8                     BAUDCON         equ	4024	;# 
   296   000FB8                     BAUDCTL         equ	4024	;# 
   297   000FBA                     CCP2CON         equ	4026	;# 
   298   000FBB                     CCPR2           equ	4027	;# 
   299   000FBB                     CCPR2L          equ	4027	;# 
   300   000FBC                     CCPR2H          equ	4028	;# 
   301   000FBD                     CCP1CON         equ	4029	;# 
   302   000FBD                     ECCP1CON        equ	4029	;# 
   303   000FBE                     CCPR1           equ	4030	;# 
   304   000FBE                     CCPR1L          equ	4030	;# 
   305   000FBF                     CCPR1H          equ	4031	;# 
   306   000FC0                     ADCON2          equ	4032	;# 
   307   000FC1                     ADCON1          equ	4033	;# 
   308   000FC2                     ADCON0          equ	4034	;# 
   309   000FC3                     ADRES           equ	4035	;# 
   310   000FC3                     ADRESL          equ	4035	;# 
   311   000FC4                     ADRESH          equ	4036	;# 
   312   000FC5                     SSPCON2         equ	4037	;# 
   313   000FC6                     SSPCON1         equ	4038	;# 
   314   000FC7                     SSPSTAT         equ	4039	;# 
   315   000FC8                     SSPADD          equ	4040	;# 
   316   000FC9                     SSPBUF          equ	4041	;# 
   317   000FCA                     T2CON           equ	4042	;# 
   318   000FCB                     PR2             equ	4043	;# 
   319   000FCB                     MEMCON          equ	4043	;# 
   320   000FCC                     TMR2            equ	4044	;# 
   321   000FCD                     T1CON           equ	4045	;# 
   322   000FCE                     TMR1            equ	4046	;# 
   323   000FCE                     TMR1L           equ	4046	;# 
   324   000FCF                     TMR1H           equ	4047	;# 
   325   000FD0                     RCON            equ	4048	;# 
   326   000FD1                     WDTCON          equ	4049	;# 
   327   000FD2                     HLVDCON         equ	4050	;# 
   328   000FD2                     LVDCON          equ	4050	;# 
   329   000FD3                     OSCCON          equ	4051	;# 
   330   000FD5                     T0CON           equ	4053	;# 
   331   000FD6                     TMR0            equ	4054	;# 
   332   000FD6                     TMR0L           equ	4054	;# 
   333   000FD7                     TMR0H           equ	4055	;# 
   334   000FD8                     STATUS          equ	4056	;# 
   335   000FD9                     FSR2            equ	4057	;# 
   336   000FD9                     FSR2L           equ	4057	;# 
   337   000FDA                     FSR2H           equ	4058	;# 
   338   000FDB                     PLUSW2          equ	4059	;# 
   339   000FDC                     PREINC2         equ	4060	;# 
   340   000FDD                     POSTDEC2        equ	4061	;# 
   341   000FDE                     POSTINC2        equ	4062	;# 
   342   000FDF                     INDF2           equ	4063	;# 
   343   000FE0                     BSR             equ	4064	;# 
   344   000FE1                     FSR1            equ	4065	;# 
   345   000FE1                     FSR1L           equ	4065	;# 
   346   000FE2                     FSR1H           equ	4066	;# 
   347   000FE3                     PLUSW1          equ	4067	;# 
   348   000FE4                     PREINC1         equ	4068	;# 
   349   000FE5                     POSTDEC1        equ	4069	;# 
   350   000FE6                     POSTINC1        equ	4070	;# 
   351   000FE7                     INDF1           equ	4071	;# 
   352   000FE8                     WREG            equ	4072	;# 
   353   000FE9                     FSR0            equ	4073	;# 
   354   000FE9                     FSR0L           equ	4073	;# 
   355   000FEA                     FSR0H           equ	4074	;# 
   356   000FEB                     PLUSW0          equ	4075	;# 
   357   000FEC                     PREINC0         equ	4076	;# 
   358   000FED                     POSTDEC0        equ	4077	;# 
   359   000FEE                     POSTINC0        equ	4078	;# 
   360   000FEF                     INDF0           equ	4079	;# 
   361   000FF0                     INTCON3         equ	4080	;# 
   362   000FF1                     INTCON2         equ	4081	;# 
   363   000FF2                     INTCON          equ	4082	;# 
   364   000FF3                     PROD            equ	4083	;# 
   365   000FF3                     PRODL           equ	4083	;# 
   366   000FF4                     PRODH           equ	4084	;# 
   367   000FF5                     TABLAT          equ	4085	;# 
   368   000FF6                     TBLPTR          equ	4086	;# 
   369   000FF6                     TBLPTRL         equ	4086	;# 
   370   000FF7                     TBLPTRH         equ	4087	;# 
   371   000FF8                     TBLPTRU         equ	4088	;# 
   372   000FF9                     PCLAT           equ	4089	;# 
   373   000FF9                     PC              equ	4089	;# 
   374   000FF9                     PCL             equ	4089	;# 
   375   000FFA                     PCLATH          equ	4090	;# 
   376   000FFB                     PCLATU          equ	4091	;# 
   377   000FFC                     STKPTR          equ	4092	;# 
   378   000FFD                     TOS             equ	4093	;# 
   379   000FFD                     TOSL            equ	4093	;# 
   380   000FFE                     TOSH            equ	4094	;# 
   381   000FFF                     TOSU            equ	4095	;# 
   382   000F80                     PORTA           equ	3968	;# 
   383   000F81                     PORTB           equ	3969	;# 
   384   000F82                     PORTC           equ	3970	;# 
   385   000F83                     PORTD           equ	3971	;# 
   386   000F84                     PORTE           equ	3972	;# 
   387   000F89                     LATA            equ	3977	;# 
   388   000F8A                     LATB            equ	3978	;# 
   389   000F8B                     LATC            equ	3979	;# 
   390   000F8C                     LATD            equ	3980	;# 
   391   000F8D                     LATE            equ	3981	;# 
   392   000F92                     TRISA           equ	3986	;# 
   393   000F92                     DDRA            equ	3986	;# 
   394   000F93                     TRISB           equ	3987	;# 
   395   000F93                     DDRB            equ	3987	;# 
   396   000F94                     TRISC           equ	3988	;# 
   397   000F94                     DDRC            equ	3988	;# 
   398   000F95                     TRISD           equ	3989	;# 
   399   000F95                     DDRD            equ	3989	;# 
   400   000F96                     TRISE           equ	3990	;# 
   401   000F96                     DDRE            equ	3990	;# 
   402   000F9B                     OSCTUNE         equ	3995	;# 
   403   000F9D                     PIE1            equ	3997	;# 
   404   000F9E                     PIR1            equ	3998	;# 
   405   000F9F                     IPR1            equ	3999	;# 
   406   000FA0                     PIE2            equ	4000	;# 
   407   000FA1                     PIR2            equ	4001	;# 
   408   000FA2                     IPR2            equ	4002	;# 
   409   000FA6                     EECON1          equ	4006	;# 
   410   000FA7                     EECON2          equ	4007	;# 
   411   000FA8                     EEDATA          equ	4008	;# 
   412   000FA9                     EEADR           equ	4009	;# 
   413   000FAB                     RCSTA           equ	4011	;# 
   414   000FAB                     RCSTA1          equ	4011	;# 
   415   000FAC                     TXSTA           equ	4012	;# 
   416   000FAC                     TXSTA1          equ	4012	;# 
   417   000FAD                     TXREG           equ	4013	;# 
   418   000FAD                     TXREG1          equ	4013	;# 
   419   000FAE                     RCREG           equ	4014	;# 
   420   000FAE                     RCREG1          equ	4014	;# 
   421   000FAF                     SPBRG           equ	4015	;# 
   422   000FAF                     SPBRG1          equ	4015	;# 
   423   000FB0                     SPBRGH          equ	4016	;# 
   424   000FB1                     T3CON           equ	4017	;# 
   425   000FB2                     TMR3            equ	4018	;# 
   426   000FB2                     TMR3L           equ	4018	;# 
   427   000FB3                     TMR3H           equ	4019	;# 
   428   000FB4                     CMCON           equ	4020	;# 
   429   000FB5                     CVRCON          equ	4021	;# 
   430   000FB6                     ECCP1AS         equ	4022	;# 
   431   000FB7                     ECCP1DEL        equ	4023	;# 
   432   000FB7                     PWM1CON         equ	4023	;# 
   433   000FB8                     BAUDCON         equ	4024	;# 
   434   000FB8                     BAUDCTL         equ	4024	;# 
   435   000FBA                     CCP2CON         equ	4026	;# 
   436   000FBB                     CCPR2           equ	4027	;# 
   437   000FBB                     CCPR2L          equ	4027	;# 
   438   000FBC                     CCPR2H          equ	4028	;# 
   439   000FBD                     CCP1CON         equ	4029	;# 
   440   000FBD                     ECCP1CON        equ	4029	;# 
   441   000FBE                     CCPR1           equ	4030	;# 
   442   000FBE                     CCPR1L          equ	4030	;# 
   443   000FBF                     CCPR1H          equ	4031	;# 
   444   000FC0                     ADCON2          equ	4032	;# 
   445   000FC1                     ADCON1          equ	4033	;# 
   446   000FC2                     ADCON0          equ	4034	;# 
   447   000FC3                     ADRES           equ	4035	;# 
   448   000FC3                     ADRESL          equ	4035	;# 
   449   000FC4                     ADRESH          equ	4036	;# 
   450   000FC5                     SSPCON2         equ	4037	;# 
   451   000FC6                     SSPCON1         equ	4038	;# 
   452   000FC7                     SSPSTAT         equ	4039	;# 
   453   000FC8                     SSPADD          equ	4040	;# 
   454   000FC9                     SSPBUF          equ	4041	;# 
   455   000FCA                     T2CON           equ	4042	;# 
   456   000FCB                     PR2             equ	4043	;# 
   457   000FCB                     MEMCON          equ	4043	;# 
   458   000FCC                     TMR2            equ	4044	;# 
   459   000FCD                     T1CON           equ	4045	;# 
   460   000FCE                     TMR1            equ	4046	;# 
   461   000FCE                     TMR1L           equ	4046	;# 
   462   000FCF                     TMR1H           equ	4047	;# 
   463   000FD0                     RCON            equ	4048	;# 
   464   000FD1                     WDTCON          equ	4049	;# 
   465   000FD2                     HLVDCON         equ	4050	;# 
   466   000FD2                     LVDCON          equ	4050	;# 
   467   000FD3                     OSCCON          equ	4051	;# 
   468   000FD5                     T0CON           equ	4053	;# 
   469   000FD6                     TMR0            equ	4054	;# 
   470   000FD6                     TMR0L           equ	4054	;# 
   471   000FD7                     TMR0H           equ	4055	;# 
   472   000FD8                     STATUS          equ	4056	;# 
   473   000FD9                     FSR2            equ	4057	;# 
   474   000FD9                     FSR2L           equ	4057	;# 
   475   000FDA                     FSR2H           equ	4058	;# 
   476   000FDB                     PLUSW2          equ	4059	;# 
   477   000FDC                     PREINC2         equ	4060	;# 
   478   000FDD                     POSTDEC2        equ	4061	;# 
   479   000FDE                     POSTINC2        equ	4062	;# 
   480   000FDF                     INDF2           equ	4063	;# 
   481   000FE0                     BSR             equ	4064	;# 
   482   000FE1                     FSR1            equ	4065	;# 
   483   000FE1                     FSR1L           equ	4065	;# 
   484   000FE2                     FSR1H           equ	4066	;# 
   485   000FE3                     PLUSW1          equ	4067	;# 
   486   000FE4                     PREINC1         equ	4068	;# 
   487   000FE5                     POSTDEC1        equ	4069	;# 
   488   000FE6                     POSTINC1        equ	4070	;# 
   489   000FE7                     INDF1           equ	4071	;# 
   490   000FE8                     WREG            equ	4072	;# 
   491   000FE9                     FSR0            equ	4073	;# 
   492   000FE9                     FSR0L           equ	4073	;# 
   493   000FEA                     FSR0H           equ	4074	;# 
   494   000FEB                     PLUSW0          equ	4075	;# 
   495   000FEC                     PREINC0         equ	4076	;# 
   496   000FED                     POSTDEC0        equ	4077	;# 
   497   000FEE                     POSTINC0        equ	4078	;# 
   498   000FEF                     INDF0           equ	4079	;# 
   499   000FF0                     INTCON3         equ	4080	;# 
   500   000FF1                     INTCON2         equ	4081	;# 
   501   000FF2                     INTCON          equ	4082	;# 
   502   000FF3                     PROD            equ	4083	;# 
   503   000FF3                     PRODL           equ	4083	;# 
   504   000FF4                     PRODH           equ	4084	;# 
   505   000FF5                     TABLAT          equ	4085	;# 
   506   000FF6                     TBLPTR          equ	4086	;# 
   507   000FF6                     TBLPTRL         equ	4086	;# 
   508   000FF7                     TBLPTRH         equ	4087	;# 
   509   000FF8                     TBLPTRU         equ	4088	;# 
   510   000FF9                     PCLAT           equ	4089	;# 
   511   000FF9                     PC              equ	4089	;# 
   512   000FF9                     PCL             equ	4089	;# 
   513   000FFA                     PCLATH          equ	4090	;# 
   514   000FFB                     PCLATU          equ	4091	;# 
   515   000FFC                     STKPTR          equ	4092	;# 
   516   000FFD                     TOS             equ	4093	;# 
   517   000FFD                     TOSL            equ	4093	;# 
   518   000FFE                     TOSH            equ	4094	;# 
   519   000FFF                     TOSU            equ	4095	;# 
   520                           
   521                           	psect	idataCOMRAM
   522   000ADE                     __pidataCOMRAM:
   523                           	callstack 0
   524                           
   525                           ;initializer for _LCD_entry_mode
   526   000ADE  06                 	db	6
   527                           
   528                           ;initializer for _LCD_display_control
   529   000ADF  0C                 	db	12
   530   007C48                     _LATA0          set	31816
   531   000F80                     _PORTAbits      set	3968
   532   000F92                     _TRISAbits      set	3986
   533   000FC1                     _ADCON1         set	4033
   534   000FD3                     _OSCCON         set	4051
   535   000F95                     _TRISDbits      set	3989
   536   000F8C                     _LATDbits       set	3980
   537                           
   538                           	psect	smallconst
   539   000200                     __psmallconst:
   540                           	callstack 0
   541   000200  00                 	db	0
   542   000201                     STR_1:
   543   000201  48                 	db	72	;'H'
   544   000202  75                 	db	117	;'u'
   545   000203  6D                 	db	109	;'m'
   546   000204  69                 	db	105	;'i'
   547   000205  64                 	db	100	;'d'
   548   000206  69                 	db	105	;'i'
   549   000207  74                 	db	116	;'t'
   550   000208  79                 	db	121	;'y'
   551   000209  3A                 	db	58	;':'
   552   00020A  20                 	db	32
   553   00020B  00                 	db	0
   554   00020C                     STR_3:
   555   00020C  54                 	db	84	;'T'
   556   00020D  65                 	db	101	;'e'
   557   00020E  6D                 	db	109	;'m'
   558   00020F  70                 	db	112	;'p'
   559   000210  3A                 	db	58	;':'
   560   000211  20                 	db	32
   561   000212  00                 	db	0
   562   000213                     STR_2:
   563   000213  2E                 	db	46
   564   000214  00                 	db	0
   565   000213                     STR_4           equ	STR_2
   566   000215  00                 	db	0	; dummy byte at the end
   567   000001                     __activetblptr  equ	1
   568                           
   569                           ; #config settings
   570                           
   571                           	psect	cinit
   572   000A2E                     __pcinit:
   573                           	callstack 0
   574   000A2E                     start_initialization:
   575                           	callstack 0
   576   000A2E                     __initialization:
   577                           	callstack 0
   578                           
   579                           ; Initialize objects allocated to COMRAM (2 bytes)
   580                           ; load TBLPTR registers with __pidataCOMRAM
   581   000A2E  0EDE               	movlw	low __pidataCOMRAM
   582   000A30  6EF6               	movwf	tblptrl,c
   583   000A32  0E0A               	movlw	high __pidataCOMRAM
   584   000A34  6EF7               	movwf	tblptrh,c
   585   000A36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   586   000A38  6EF8               	movwf	tblptru,c
   587   000A3A  0009               	tblrd		*+	;fetch initializer
   588   000A3C  CFF5 F024          	movff	tablat,__pdataCOMRAM
   589   000A40  0009               	tblrd		*+	;fetch initializer
   590   000A42  CFF5 F025          	movff	tablat,__pdataCOMRAM+1
   591                           
   592                           ; Clear objects allocated to COMRAM (4 bytes)
   593   000A46  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
   594   000A48  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
   595   000A4A  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
   596   000A4C  6A20               	clrf	__pbssCOMRAM& (0+255),c
   597   000A4E                     end_of_initialization:
   598                           	callstack 0
   599   000A4E                     __end_of__initialization:
   600                           	callstack 0
   601   000A4E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   602   000A50  6EF8               	movwf	tblptru,c
   603   000A52  0E02               	movlw	high __Lsmallconst
   604   000A54  6EF7               	movwf	tblptrh,c
   605   000A56  0100               	movlb	0
   606   000A58  EFBB  F003         	goto	_main	;jump to C main() function
   607                           
   608                           	psect	bssCOMRAM
   609   000020                     __pbssCOMRAM:
   610                           	callstack 0
   611   000020                     	ds	4
   612                           
   613                           	psect	dataCOMRAM
   614   000024                     __pdataCOMRAM:
   615                           	callstack 0
   616   000024                     _LCD_entry_mode:
   617                           	callstack 0
   618   000024                     	ds	1
   619   000025                     _LCD_display_control:
   620                           	callstack 0
   621   000025                     	ds	1
   622                           
   623                           	psect	cstackCOMRAM
   624   000001                     __pcstackCOMRAM:
   625                           	callstack 0
   626   000001                     ?___lmul:
   627                           	callstack 0
   628   000001                     ?___aldiv:
   629                           	callstack 0
   630   000001                     ?___almod:
   631                           	callstack 0
   632   000001                     DHT11_ReadData@i:
   633                           	callstack 0
   634   000001                     ___lmul@multiplier:
   635                           	callstack 0
   636   000001                     ___aldiv@dividend:
   637                           	callstack 0
   638   000001                     ___almod@dividend:
   639                           	callstack 0
   640   000001                     ??_DHT11_Start:
   641   000001                     ??_LCD_write_command:
   642   000001                     ??_LCD_write_data:
   643                           
   644                           ; 1 bytes @ 0x0
   645   000001                     	ds	1
   646   000002                     DHT11_ReadData@data:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x1
   650   000002                     	ds	1
   651   000003                     LCD_write_command@command:
   652                           	callstack 0
   653   000003                     LCD_write_data@data:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x2
   657   000003                     	ds	1
   658   000004                     LCD_cursor_set@column:
   659                           	callstack 0
   660   000004                     LCD_write_string@string:
   661                           	callstack 0
   662   000004                     LCD_write_char@character:
   663                           	callstack 0
   664   000004                     ??_LCD_clear:
   665   000004                     
   666                           ; 1 bytes @ 0x3
   667   000004                     	ds	1
   668   000005                     LCD_cursor_set@row:
   669                           	callstack 0
   670   000005                     ___lmul@multiplicand:
   671                           	callstack 0
   672   000005                     ___aldiv@divisor:
   673                           	callstack 0
   674   000005                     ___almod@divisor:
   675                           	callstack 0
   676   000005                     ??_LCD_init:
   677   000005                     ??_LCD_write_string:
   678                           
   679                           ; 1 bytes @ 0x4
   680   000005                     	ds	1
   681   000006                     LCD_write_string@i:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x5
   685   000006                     	ds	3
   686   000009                     ___aldiv@counter:
   687                           	callstack 0
   688   000009                     ___almod@counter:
   689                           	callstack 0
   690   000009                     ___lmul@product:
   691                           	callstack 0
   692   000009                     
   693                           ; 1 bytes @ 0x8
   694   000009                     	ds	1
   695   00000A                     ___aldiv@sign:
   696                           	callstack 0
   697   00000A                     ___almod@sign:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x9
   701   00000A                     	ds	1
   702   00000B                     ___aldiv@quotient:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0xA
   706   00000B                     	ds	4
   707   00000F                     LCD_write_variable@variable:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0xE
   711   00000F                     	ds	4
   712   000013                     LCD_write_variable@left_offset:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x12
   716   000013                     	ds	1
   717   000014                     LCD_write_variable@i:
   718                           	callstack 0
   719   000014                     
   720                           ; 1 bytes @ 0x13
   721   000014                     	ds	1
   722   000015                     LCD_write_variable@digits:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x14
   726   000015                     	ds	1
   727   000016                     LCD_write_variable@temp_variable:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x15
   731   000016                     	ds	4
   732   00001A                     ??_main:
   733                           
   734                           ; 1 bytes @ 0x19
   735   00001A                     	ds	2
   736   00001C                     main@H_num:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x1B
   740   00001C                     	ds	1
   741   00001D                     main@H_decimal:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x1C
   745   00001D                     	ds	1
   746   00001E                     main@T_num:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x1D
   750   00001E                     	ds	1
   751   00001F                     main@T_decimal:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x1E
   755   00001F                     	ds	1
   756                           
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 6 in file "Lab10.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  T_decimal       1   30[COMRAM] unsigned char 
   767 ;;  T_num           1   29[COMRAM] unsigned char 
   768 ;;  H_decimal       1   28[COMRAM] unsigned char 
   769 ;;  H_num           1   27[COMRAM] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1
   779 ;;      Params:         0       0       0
   780 ;;      Locals:         4       0       0
   781 ;;      Temps:          2       0       0
   782 ;;      Totals:         6       0       0
   783 ;;Total ram usage:        6 bytes
   784 ;; Hardware stack levels required when called: 4
   785 ;; This function calls:
   786 ;;		_DHT11_CheckResponse
   787 ;;		_DHT11_ReadData
   788 ;;		_DHT11_Start
   789 ;;		_LCD_cursor_set
   790 ;;		_LCD_init
   791 ;;		_LCD_write_char
   792 ;;		_LCD_write_string
   793 ;;		_LCD_write_variable
   794 ;; This function is called by:
   795 ;;		Startup code after reset
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text0
   800   000776                     __ptext0:
   801                           	callstack 0
   802   000776                     _main:
   803                           	callstack 27
   804   000776                     
   805                           ;Lab10.c: 8:     char H_num, H_decimal, T_num, T_decimal;;Lab10.c: 10:     OSCCON = 0x72
      +                          ;
   806   000776  0E72               	movlw	114
   807   000778  6ED3               	movwf	211,c	;volatile
   808                           
   809                           ;Lab10.c: 11:     ADCON1=0x0F;
   810   00077A  0E0F               	movlw	15
   811   00077C  6EC1               	movwf	193,c	;volatile
   812   00077E                     
   813                           ;Lab10.c: 13:     LCD_init();
   814   00077E  EC27  F004         	call	_LCD_init	;wreg free
   815   000782                     l1453:
   816                           
   817                           ;Lab10.c: 15:         DHT11_Start();
   818   000782  EC44  F005         	call	_DHT11_Start	;wreg free
   819   000786                     
   820                           ;Lab10.c: 16:         DHT11_CheckResponse();
   821   000786  EC2E  F005         	call	_DHT11_CheckResponse	;wreg free
   822   00078A                     
   823                           ;Lab10.c: 19:         H_num = DHT11_ReadData();
   824   00078A  ECCE  F004         	call	_DHT11_ReadData	;wreg free
   825   00078E  6E1C               	movwf	main@H_num^0,c
   826   000790                     
   827                           ;Lab10.c: 20:         H_decimal = DHT11_ReadData();
   828   000790  ECCE  F004         	call	_DHT11_ReadData	;wreg free
   829   000794  6E1D               	movwf	main@H_decimal^0,c
   830   000796                     
   831                           ;Lab10.c: 21:         T_num = DHT11_ReadData();
   832   000796  ECCE  F004         	call	_DHT11_ReadData	;wreg free
   833   00079A  6E1E               	movwf	main@T_num^0,c
   834   00079C                     
   835                           ;Lab10.c: 22:         T_decimal = DHT11_ReadData();
   836   00079C  ECCE  F004         	call	_DHT11_ReadData	;wreg free
   837   0007A0  6E1F               	movwf	main@T_decimal^0,c
   838   0007A2                     
   839                           ;Lab10.c: 25:         LCD_cursor_set(1,1);
   840   0007A2  0E01               	movlw	1
   841   0007A4  6E04               	movwf	LCD_cursor_set@column^0,c
   842   0007A6  0E01               	movlw	1
   843   0007A8  EC9E  F004         	call	_LCD_cursor_set
   844   0007AC                     
   845                           ;Lab10.c: 26:         LCD_write_string("Humidity: ");
   846   0007AC  0E01               	movlw	low STR_1
   847   0007AE  6E04               	movwf	LCD_write_string@string^0,c
   848   0007B0  ECFA  F004         	call	_LCD_write_string	;wreg free
   849   0007B4                     
   850                           ;Lab10.c: 27:         LCD_write_variable(H_num,0);
   851   0007B4  501C               	movf	main@H_num^0,w,c
   852   0007B6  6E0F               	movwf	LCD_write_variable@variable^0,c
   853   0007B8  6A10               	clrf	(LCD_write_variable@variable+1)^0,c
   854   0007BA  6A11               	clrf	(LCD_write_variable@variable+2)^0,c
   855   0007BC  6A12               	clrf	(LCD_write_variable@variable+3)^0,c
   856   0007BE  0E00               	movlw	0
   857   0007C0  6E13               	movwf	LCD_write_variable@left_offset^0,c
   858   0007C2  EC0B  F001         	call	_LCD_write_variable	;wreg free
   859   0007C6                     
   860                           ;Lab10.c: 28:         LCD_write_string(".");
   861   0007C6  0E13               	movlw	low STR_2
   862   0007C8  6E04               	movwf	LCD_write_string@string^0,c
   863   0007CA  ECFA  F004         	call	_LCD_write_string	;wreg free
   864   0007CE                     
   865                           ;Lab10.c: 29:         LCD_write_variable(H_decimal,0);
   866   0007CE  501D               	movf	main@H_decimal^0,w,c
   867   0007D0  6E0F               	movwf	LCD_write_variable@variable^0,c
   868   0007D2  6A10               	clrf	(LCD_write_variable@variable+1)^0,c
   869   0007D4  6A11               	clrf	(LCD_write_variable@variable+2)^0,c
   870   0007D6  6A12               	clrf	(LCD_write_variable@variable+3)^0,c
   871   0007D8  0E00               	movlw	0
   872   0007DA  6E13               	movwf	LCD_write_variable@left_offset^0,c
   873   0007DC  EC0B  F001         	call	_LCD_write_variable	;wreg free
   874   0007E0                     
   875                           ;Lab10.c: 30:         LCD_write_char('%');
   876   0007E0  0E25               	movlw	37
   877   0007E2  EC6A  F005         	call	_LCD_write_char
   878   0007E6                     
   879                           ;Lab10.c: 33:         LCD_cursor_set(2,1);
   880   0007E6  0E01               	movlw	1
   881   0007E8  6E04               	movwf	LCD_cursor_set@column^0,c
   882   0007EA  0E02               	movlw	2
   883   0007EC  EC9E  F004         	call	_LCD_cursor_set
   884   0007F0                     
   885                           ;Lab10.c: 34:         LCD_write_string("Temp: ");
   886   0007F0  0E0C               	movlw	low STR_3
   887   0007F2  6E04               	movwf	LCD_write_string@string^0,c
   888   0007F4  ECFA  F004         	call	_LCD_write_string	;wreg free
   889   0007F8                     
   890                           ;Lab10.c: 35:         LCD_write_variable(T_num,0);
   891   0007F8  501E               	movf	main@T_num^0,w,c
   892   0007FA  6E0F               	movwf	LCD_write_variable@variable^0,c
   893   0007FC  6A10               	clrf	(LCD_write_variable@variable+1)^0,c
   894   0007FE  6A11               	clrf	(LCD_write_variable@variable+2)^0,c
   895   000800  6A12               	clrf	(LCD_write_variable@variable+3)^0,c
   896   000802  0E00               	movlw	0
   897   000804  6E13               	movwf	LCD_write_variable@left_offset^0,c
   898   000806  EC0B  F001         	call	_LCD_write_variable	;wreg free
   899   00080A                     
   900                           ;Lab10.c: 36:         LCD_write_string(".");
   901   00080A  0E13               	movlw	low STR_2
   902   00080C  6E04               	movwf	LCD_write_string@string^0,c
   903   00080E  ECFA  F004         	call	_LCD_write_string	;wreg free
   904   000812                     
   905                           ;Lab10.c: 37:         LCD_write_variable(T_decimal,0);
   906   000812  501F               	movf	main@T_decimal^0,w,c
   907   000814  6E0F               	movwf	LCD_write_variable@variable^0,c
   908   000816  6A10               	clrf	(LCD_write_variable@variable+1)^0,c
   909   000818  6A11               	clrf	(LCD_write_variable@variable+2)^0,c
   910   00081A  6A12               	clrf	(LCD_write_variable@variable+3)^0,c
   911   00081C  0E00               	movlw	0
   912   00081E  6E13               	movwf	LCD_write_variable@left_offset^0,c
   913   000820  EC0B  F001         	call	_LCD_write_variable	;wreg free
   914   000824                     
   915                           ;Lab10.c: 38:         LCD_write_char(0xdf);
   916   000824  0EDF               	movlw	223
   917   000826  EC6A  F005         	call	_LCD_write_char
   918   00082A                     
   919                           ;Lab10.c: 39:         LCD_write_char('C');
   920   00082A  0E43               	movlw	67
   921   00082C  EC6A  F005         	call	_LCD_write_char
   922   000830                     
   923                           ;Lab10.c: 42:         _delay((unsigned long)((500)*(8000000/4000.0)));
   924   000830  0E06               	movlw	6
   925   000832  6E1B               	movwf	(??_main+1)^0,c
   926   000834  0E13               	movlw	19
   927   000836  6E1A               	movwf	??_main^0,c
   928   000838  0EAE               	movlw	174
   929   00083A                     u757:
   930   00083A  2EE8               	decfsz	wreg,f,c
   931   00083C  D7FE               	bra	u757
   932   00083E  2E1A               	decfsz	??_main^0,f,c
   933   000840  D7FC               	bra	u757
   934   000842  2E1B               	decfsz	(??_main+1)^0,f,c
   935   000844  D7FA               	bra	u757
   936   000846  EFC1  F003         	goto	l1453
   937   00084A  EF00  F000         	goto	start
   938   00084E                     __end_of_main:
   939                           	callstack 0
   940                           
   941 ;; *************** function _LCD_write_variable *****************
   942 ;; Defined at:
   943 ;;		line 422 in file "LCD.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  variable        4   14[COMRAM] long 
   946 ;;  left_offset     1   18[COMRAM] unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  i               1   19[COMRAM] unsigned char 
   949 ;;  temp_variabl    4   21[COMRAM] long 
   950 ;;  digits          1   20[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1
   960 ;;      Params:         5       0       0
   961 ;;      Locals:         6       0       0
   962 ;;      Temps:          0       0       0
   963 ;;      Totals:        11       0       0
   964 ;;Total ram usage:       11 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 2
   967 ;; This function calls:
   968 ;;		_LCD_write_data
   969 ;;		___aldiv
   970 ;;		___almod
   971 ;;		___lmul
   972 ;; This function is called by:
   973 ;;		_main
   974 ;;		_LCD_write_float
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text1
   979   000216                     __ptext1:
   980                           	callstack 0
   981   000216                     _LCD_write_variable:
   982                           	callstack 28
   983   000216                     
   984                           ;LCD.c: 424:     int32_t temp_variable;;LCD.c: 425:     uint8_t digits = 0;
   985   000216  6A15               	clrf	LCD_write_variable@digits^0,c
   986   000218                     
   987                           ;LCD.c: 428:     if(variable < 0) variable *= -1;
   988   000218  BE12               	btfsc	(LCD_write_variable@variable+3)^0,7,c
   989   00021A  EF13  F001         	goto	u660
   990   00021E  EF11  F001         	goto	u661
   991   000222                     u661:
   992   000222  EF2D  F001         	goto	l1381
   993   000226                     u660:
   994   000226  C00F  F001         	movff	LCD_write_variable@variable,___lmul@multiplier
   995   00022A  C010  F002         	movff	LCD_write_variable@variable+1,___lmul@multiplier+1
   996   00022E  C011  F003         	movff	LCD_write_variable@variable+2,___lmul@multiplier+2
   997   000232  C012  F004         	movff	LCD_write_variable@variable+3,___lmul@multiplier+3
   998   000236  0EFF               	movlw	255
   999   000238  6E05               	movwf	___lmul@multiplicand^0,c
  1000   00023A  0EFF               	movlw	255
  1001   00023C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1002   00023E  0EFF               	movlw	255
  1003   000240  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1004   000242  0EFF               	movlw	255
  1005   000244  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1006   000246  EC69  F004         	call	___lmul	;wreg free
  1007   00024A  C001  F00F         	movff	?___lmul,LCD_write_variable@variable
  1008   00024E  C002  F010         	movff	?___lmul+1,LCD_write_variable@variable+1
  1009   000252  C003  F011         	movff	?___lmul+2,LCD_write_variable@variable+2
  1010   000256  C004  F012         	movff	?___lmul+3,LCD_write_variable@variable+3
  1011   00025A                     l1381:
  1012                           
  1013                           ;LCD.c: 431:     temp_variable = variable;
  1014   00025A  C00F  F016         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  1015   00025E  C010  F017         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  1016   000262  C011  F018         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  1017   000266  C012  F019         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  1018   00026A                     l1383:
  1019                           
  1020                           ;LCD.c: 433:         digits++;
  1021   00026A  2A15               	incf	LCD_write_variable@digits^0,f,c
  1022   00026C                     
  1023                           ;LCD.c: 434:         if(temp_variable < 10) break;
  1024   00026C  BE19               	btfsc	(LCD_write_variable@temp_variable+3)^0,7,c
  1025   00026E  EF46  F001         	goto	u670
  1026   000272  5019               	movf	(LCD_write_variable@temp_variable+3)^0,w,c
  1027   000274  1018               	iorwf	(LCD_write_variable@temp_variable+2)^0,w,c
  1028   000276  1017               	iorwf	(LCD_write_variable@temp_variable+1)^0,w,c
  1029   000278  E107               	bnz	u671
  1030   00027A  0E0A               	movlw	10
  1031   00027C  5C16               	subwf	LCD_write_variable@temp_variable^0,w,c
  1032   00027E  B0D8               	btfsc	status,0,c
  1033   000280  EF44  F001         	goto	u671
  1034   000284  EF46  F001         	goto	u670
  1035   000288                     u671:
  1036   000288  EF48  F001         	goto	l1389
  1037   00028C                     u670:
  1038   00028C  EF64  F001         	goto	l1391
  1039   000290                     l1389:
  1040                           
  1041                           ;LCD.c: 435:         temp_variable /= 10;
  1042   000290  C016  F001         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  1043   000294  C017  F002         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  1044   000298  C018  F003         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  1045   00029C  C019  F004         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  1046   0002A0  0E0A               	movlw	10
  1047   0002A2  6E05               	movwf	___aldiv@divisor^0,c
  1048   0002A4  0E00               	movlw	0
  1049   0002A6  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1050   0002A8  0E00               	movlw	0
  1051   0002AA  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1052   0002AC  0E00               	movlw	0
  1053   0002AE  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1054   0002B0  ECC5  F001         	call	___aldiv	;wreg free
  1055   0002B4  C001  F016         	movff	?___aldiv,LCD_write_variable@temp_variable
  1056   0002B8  C002  F017         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  1057   0002BC  C003  F018         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  1058   0002C0  C004  F019         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  1059   0002C4  EF35  F001         	goto	l1383
  1060   0002C8                     l1391:
  1061                           
  1062                           ;LCD.c: 440:         if(left_offset <= digits) break;
  1063   0002C8  5013               	movf	LCD_write_variable@left_offset^0,w,c
  1064   0002CA  5C15               	subwf	LCD_write_variable@digits^0,w,c
  1065   0002CC  A0D8               	btfss	status,0,c
  1066   0002CE  EF6B  F001         	goto	u681
  1067   0002D2  EF6D  F001         	goto	u680
  1068   0002D6                     u681:
  1069   0002D6  EF6F  F001         	goto	l1395
  1070   0002DA                     u680:
  1071   0002DA  EF75  F001         	goto	l102
  1072   0002DE                     l1395:
  1073                           
  1074                           ;LCD.c: 441:         LCD_write_data(' ');
  1075   0002DE  0E20               	movlw	32
  1076   0002E0  EC4A  F002         	call	_LCD_write_data
  1077   0002E4                     
  1078                           ;LCD.c: 442:         left_offset--;
  1079   0002E4  0613               	decf	LCD_write_variable@left_offset^0,f,c
  1080   0002E6  EF64  F001         	goto	l1391
  1081   0002EA                     l102:
  1082                           
  1083                           ;LCD.c: 447:         temp_variable = variable;
  1084   0002EA  C00F  F016         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  1085   0002EE  C010  F017         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  1086   0002F2  C011  F018         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  1087   0002F6  C012  F019         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  1088   0002FA                     
  1089                           ;LCD.c: 448:         for(uint8_t i = 1 ; i < digits ; i++){
  1090   0002FA  0E01               	movlw	1
  1091   0002FC  6E14               	movwf	LCD_write_variable@i^0,c
  1092   0002FE  EF9C  F001         	goto	l1405
  1093   000302                     l1401:
  1094                           
  1095                           ;LCD.c: 449:             temp_variable /= 10;
  1096   000302  C016  F001         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  1097   000306  C017  F002         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  1098   00030A  C018  F003         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  1099   00030E  C019  F004         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  1100   000312  0E0A               	movlw	10
  1101   000314  6E05               	movwf	___aldiv@divisor^0,c
  1102   000316  0E00               	movlw	0
  1103   000318  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1104   00031A  0E00               	movlw	0
  1105   00031C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1106   00031E  0E00               	movlw	0
  1107   000320  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1108   000322  ECC5  F001         	call	___aldiv	;wreg free
  1109   000326  C001  F016         	movff	?___aldiv,LCD_write_variable@temp_variable
  1110   00032A  C002  F017         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  1111   00032E  C003  F018         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  1112   000332  C004  F019         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  1113   000336                     
  1114                           ;LCD.c: 450:         }
  1115   000336  2A14               	incf	LCD_write_variable@i^0,f,c
  1116   000338                     l1405:
  1117   000338  5015               	movf	LCD_write_variable@digits^0,w,c
  1118   00033A  5C14               	subwf	LCD_write_variable@i^0,w,c
  1119   00033C  A0D8               	btfss	status,0,c
  1120   00033E  EFA3  F001         	goto	u691
  1121   000342  EFA5  F001         	goto	u690
  1122   000346                     u691:
  1123   000346  EF81  F001         	goto	l1401
  1124   00034A                     u690:
  1125   00034A                     
  1126                           ;LCD.c: 451:         LCD_write_data( (temp_variable%10) + '0' );
  1127   00034A  C016  F001         	movff	LCD_write_variable@temp_variable,___almod@dividend
  1128   00034E  C017  F002         	movff	LCD_write_variable@temp_variable+1,___almod@dividend+1
  1129   000352  C018  F003         	movff	LCD_write_variable@temp_variable+2,___almod@dividend+2
  1130   000356  C019  F004         	movff	LCD_write_variable@temp_variable+3,___almod@dividend+3
  1131   00035A  0E0A               	movlw	10
  1132   00035C  6E05               	movwf	___almod@divisor^0,c
  1133   00035E  0E00               	movlw	0
  1134   000360  6E06               	movwf	(___almod@divisor+1)^0,c
  1135   000362  0E00               	movlw	0
  1136   000364  6E07               	movwf	(___almod@divisor+2)^0,c
  1137   000366  0E00               	movlw	0
  1138   000368  6E08               	movwf	(___almod@divisor+3)^0,c
  1139   00036A  EC46  F003         	call	___almod	;wreg free
  1140   00036E  5001               	movf	?___almod^0,w,c
  1141   000370  0F30               	addlw	48
  1142   000372  EC4A  F002         	call	_LCD_write_data
  1143   000376                     
  1144                           ;LCD.c: 452:         digits --;
  1145   000376  0615               	decf	LCD_write_variable@digits^0,f,c
  1146   000378                     
  1147                           ;LCD.c: 453:         if(digits == 0) break;
  1148   000378  5015               	movf	LCD_write_variable@digits^0,w,c
  1149   00037A  A4D8               	btfss	status,2,c
  1150   00037C  EFC2  F001         	goto	u701
  1151   000380  EFC4  F001         	goto	u700
  1152   000384                     u701:
  1153   000384  EF75  F001         	goto	l102
  1154   000388                     u700:
  1155   000388  0012               	return		;funcret
  1156   00038A                     __end_of_LCD_write_variable:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function ___lmul *****************
  1160 ;; Defined at:
  1161 ;;		line 15 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  multiplier      4    0[COMRAM] unsigned long 
  1164 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  product         4    8[COMRAM] unsigned long 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  4    0[COMRAM] unsigned long 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1
  1176 ;;      Params:         8       0       0
  1177 ;;      Locals:         4       0       0
  1178 ;;      Temps:          0       0       0
  1179 ;;      Totals:        12       0       0
  1180 ;;Total ram usage:       12 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_LCD_write_variable
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text2
  1190   0008D2                     __ptext2:
  1191                           	callstack 0
  1192   0008D2                     ___lmul:
  1193                           	callstack 29
  1194   0008D2  0E00               	movlw	0
  1195   0008D4  6E09               	movwf	___lmul@product^0,c
  1196   0008D6  0E00               	movlw	0
  1197   0008D8  6E0A               	movwf	(___lmul@product+1)^0,c
  1198   0008DA  0E00               	movlw	0
  1199   0008DC  6E0B               	movwf	(___lmul@product+2)^0,c
  1200   0008DE  0E00               	movlw	0
  1201   0008E0  6E0C               	movwf	(___lmul@product+3)^0,c
  1202   0008E2                     l1267:
  1203   0008E2  A001               	btfss	___lmul@multiplier^0,0,c
  1204   0008E4  EF76  F004         	goto	u471
  1205   0008E8  EF78  F004         	goto	u470
  1206   0008EC                     u471:
  1207   0008EC  EF80  F004         	goto	l1271
  1208   0008F0                     u470:
  1209   0008F0  5005               	movf	___lmul@multiplicand^0,w,c
  1210   0008F2  2609               	addwf	___lmul@product^0,f,c
  1211   0008F4  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1212   0008F6  220A               	addwfc	(___lmul@product+1)^0,f,c
  1213   0008F8  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1214   0008FA  220B               	addwfc	(___lmul@product+2)^0,f,c
  1215   0008FC  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1216   0008FE  220C               	addwfc	(___lmul@product+3)^0,f,c
  1217   000900                     l1271:
  1218   000900  90D8               	bcf	status,0,c
  1219   000902  3605               	rlcf	___lmul@multiplicand^0,f,c
  1220   000904  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1221   000906  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1222   000908  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1223   00090A  90D8               	bcf	status,0,c
  1224   00090C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1225   00090E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1226   000910  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1227   000912  3201               	rrcf	___lmul@multiplier^0,f,c
  1228   000914  5001               	movf	___lmul@multiplier^0,w,c
  1229   000916  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1230   000918  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1231   00091A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1232   00091C  A4D8               	btfss	status,2,c
  1233   00091E  EF93  F004         	goto	u481
  1234   000922  EF95  F004         	goto	u480
  1235   000926                     u481:
  1236   000926  EF71  F004         	goto	l1267
  1237   00092A                     u480:
  1238   00092A  C009  F001         	movff	___lmul@product,?___lmul
  1239   00092E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1240   000932  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1241   000936  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1242   00093A  0012               	return		;funcret
  1243   00093C                     __end_of___lmul:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function ___almod *****************
  1247 ;; Defined at:
  1248 ;;		line 7 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\almod.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  dividend        4    0[COMRAM] long 
  1251 ;;  divisor         4    4[COMRAM] long 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  sign            1    9[COMRAM] unsigned char 
  1254 ;;  counter         1    8[COMRAM] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  4    0[COMRAM] long 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1
  1264 ;;      Params:         8       0       0
  1265 ;;      Locals:         2       0       0
  1266 ;;      Temps:          0       0       0
  1267 ;;      Totals:        10       0       0
  1268 ;;Total ram usage:       10 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_LCD_write_variable
  1274 ;;		_LCD_write_float
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text3
  1279   00068C                     __ptext3:
  1280                           	callstack 0
  1281   00068C                     ___almod:
  1282                           	callstack 29
  1283   00068C  6A0A               	clrf	___almod@sign^0,c
  1284   00068E  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  1285   000690  EF4E  F003         	goto	u550
  1286   000694  EF4C  F003         	goto	u551
  1287   000698                     u551:
  1288   000698  EF58  F003         	goto	l1327
  1289   00069C                     u550:
  1290   00069C  1E04               	comf	(___almod@dividend+3)^0,f,c
  1291   00069E  1E03               	comf	(___almod@dividend+2)^0,f,c
  1292   0006A0  1E02               	comf	(___almod@dividend+1)^0,f,c
  1293   0006A2  6C01               	negf	___almod@dividend^0,c
  1294   0006A4  0E00               	movlw	0
  1295   0006A6  2202               	addwfc	(___almod@dividend+1)^0,f,c
  1296   0006A8  2203               	addwfc	(___almod@dividend+2)^0,f,c
  1297   0006AA  2204               	addwfc	(___almod@dividend+3)^0,f,c
  1298   0006AC  0E01               	movlw	1
  1299   0006AE  6E0A               	movwf	___almod@sign^0,c
  1300   0006B0                     l1327:
  1301   0006B0  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  1302   0006B2  EF5F  F003         	goto	u560
  1303   0006B6  EF5D  F003         	goto	u561
  1304   0006BA                     u561:
  1305   0006BA  EF67  F003         	goto	l1331
  1306   0006BE                     u560:
  1307   0006BE  1E08               	comf	(___almod@divisor+3)^0,f,c
  1308   0006C0  1E07               	comf	(___almod@divisor+2)^0,f,c
  1309   0006C2  1E06               	comf	(___almod@divisor+1)^0,f,c
  1310   0006C4  6C05               	negf	___almod@divisor^0,c
  1311   0006C6  0E00               	movlw	0
  1312   0006C8  2206               	addwfc	(___almod@divisor+1)^0,f,c
  1313   0006CA  2207               	addwfc	(___almod@divisor+2)^0,f,c
  1314   0006CC  2208               	addwfc	(___almod@divisor+3)^0,f,c
  1315   0006CE                     l1331:
  1316   0006CE  5005               	movf	___almod@divisor^0,w,c
  1317   0006D0  1006               	iorwf	(___almod@divisor+1)^0,w,c
  1318   0006D2  1007               	iorwf	(___almod@divisor+2)^0,w,c
  1319   0006D4  1008               	iorwf	(___almod@divisor+3)^0,w,c
  1320   0006D6  B4D8               	btfsc	status,2,c
  1321   0006D8  EF70  F003         	goto	u571
  1322   0006DC  EF72  F003         	goto	u570
  1323   0006E0                     u571:
  1324   0006E0  EFA2  F003         	goto	l1347
  1325   0006E4                     u570:
  1326   0006E4  0E01               	movlw	1
  1327   0006E6  6E09               	movwf	___almod@counter^0,c
  1328   0006E8  EF7C  F003         	goto	l1337
  1329   0006EC                     l1335:
  1330   0006EC  90D8               	bcf	status,0,c
  1331   0006EE  3605               	rlcf	___almod@divisor^0,f,c
  1332   0006F0  3606               	rlcf	(___almod@divisor+1)^0,f,c
  1333   0006F2  3607               	rlcf	(___almod@divisor+2)^0,f,c
  1334   0006F4  3608               	rlcf	(___almod@divisor+3)^0,f,c
  1335   0006F6  2A09               	incf	___almod@counter^0,f,c
  1336   0006F8                     l1337:
  1337   0006F8  AE08               	btfss	(___almod@divisor+3)^0,7,c
  1338   0006FA  EF81  F003         	goto	u581
  1339   0006FE  EF83  F003         	goto	u580
  1340   000702                     u581:
  1341   000702  EF76  F003         	goto	l1335
  1342   000706                     u580:
  1343   000706                     l1339:
  1344   000706  5005               	movf	___almod@divisor^0,w,c
  1345   000708  5C01               	subwf	___almod@dividend^0,w,c
  1346   00070A  5006               	movf	(___almod@divisor+1)^0,w,c
  1347   00070C  5802               	subwfb	(___almod@dividend+1)^0,w,c
  1348   00070E  5007               	movf	(___almod@divisor+2)^0,w,c
  1349   000710  5803               	subwfb	(___almod@dividend+2)^0,w,c
  1350   000712  5008               	movf	(___almod@divisor+3)^0,w,c
  1351   000714  5804               	subwfb	(___almod@dividend+3)^0,w,c
  1352   000716  A0D8               	btfss	status,0,c
  1353   000718  EF90  F003         	goto	u591
  1354   00071C  EF92  F003         	goto	u590
  1355   000720                     u591:
  1356   000720  EF9A  F003         	goto	l1343
  1357   000724                     u590:
  1358   000724  5005               	movf	___almod@divisor^0,w,c
  1359   000726  5E01               	subwf	___almod@dividend^0,f,c
  1360   000728  5006               	movf	(___almod@divisor+1)^0,w,c
  1361   00072A  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  1362   00072C  5007               	movf	(___almod@divisor+2)^0,w,c
  1363   00072E  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  1364   000730  5008               	movf	(___almod@divisor+3)^0,w,c
  1365   000732  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  1366   000734                     l1343:
  1367   000734  90D8               	bcf	status,0,c
  1368   000736  3208               	rrcf	(___almod@divisor+3)^0,f,c
  1369   000738  3207               	rrcf	(___almod@divisor+2)^0,f,c
  1370   00073A  3206               	rrcf	(___almod@divisor+1)^0,f,c
  1371   00073C  3205               	rrcf	___almod@divisor^0,f,c
  1372   00073E  2E09               	decfsz	___almod@counter^0,f,c
  1373   000740  EF83  F003         	goto	l1339
  1374   000744                     l1347:
  1375   000744  500A               	movf	___almod@sign^0,w,c
  1376   000746  B4D8               	btfsc	status,2,c
  1377   000748  EFA8  F003         	goto	u601
  1378   00074C  EFAA  F003         	goto	u600
  1379   000750                     u601:
  1380   000750  EFB2  F003         	goto	l1351
  1381   000754                     u600:
  1382   000754  1E04               	comf	(___almod@dividend+3)^0,f,c
  1383   000756  1E03               	comf	(___almod@dividend+2)^0,f,c
  1384   000758  1E02               	comf	(___almod@dividend+1)^0,f,c
  1385   00075A  6C01               	negf	___almod@dividend^0,c
  1386   00075C  0E00               	movlw	0
  1387   00075E  2202               	addwfc	(___almod@dividend+1)^0,f,c
  1388   000760  2203               	addwfc	(___almod@dividend+2)^0,f,c
  1389   000762  2204               	addwfc	(___almod@dividend+3)^0,f,c
  1390   000764                     l1351:
  1391   000764  C001  F001         	movff	___almod@dividend,?___almod
  1392   000768  C002  F002         	movff	___almod@dividend+1,?___almod+1
  1393   00076C  C003  F003         	movff	___almod@dividend+2,?___almod+2
  1394   000770  C004  F004         	movff	___almod@dividend+3,?___almod+3
  1395   000774  0012               	return		;funcret
  1396   000776                     __end_of___almod:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function ___aldiv *****************
  1400 ;; Defined at:
  1401 ;;		line 7 in file "E:\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  dividend        4    0[COMRAM] long 
  1404 ;;  divisor         4    4[COMRAM] long 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  quotient        4   10[COMRAM] long 
  1407 ;;  sign            1    9[COMRAM] unsigned char 
  1408 ;;  counter         1    8[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  4    0[COMRAM] long 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1
  1418 ;;      Params:         8       0       0
  1419 ;;      Locals:         6       0       0
  1420 ;;      Temps:          0       0       0
  1421 ;;      Totals:        14       0       0
  1422 ;;Total ram usage:       14 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_LCD_write_variable
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text4
  1432   00038A                     __ptext4:
  1433                           	callstack 0
  1434   00038A                     ___aldiv:
  1435                           	callstack 29
  1436   00038A  6A0A               	clrf	___aldiv@sign^0,c
  1437   00038C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1438   00038E  EFCD  F001         	goto	u490
  1439   000392  EFCB  F001         	goto	u491
  1440   000396                     u491:
  1441   000396  EFD7  F001         	goto	l1283
  1442   00039A                     u490:
  1443   00039A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1444   00039C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1445   00039E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1446   0003A0  6C05               	negf	___aldiv@divisor^0,c
  1447   0003A2  0E00               	movlw	0
  1448   0003A4  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1449   0003A6  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1450   0003A8  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1451   0003AA  0E01               	movlw	1
  1452   0003AC  6E0A               	movwf	___aldiv@sign^0,c
  1453   0003AE                     l1283:
  1454   0003AE  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1455   0003B0  EFDE  F001         	goto	u500
  1456   0003B4  EFDC  F001         	goto	u501
  1457   0003B8                     u501:
  1458   0003B8  EFE8  F001         	goto	l1289
  1459   0003BC                     u500:
  1460   0003BC  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1461   0003BE  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1462   0003C0  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1463   0003C2  6C01               	negf	___aldiv@dividend^0,c
  1464   0003C4  0E00               	movlw	0
  1465   0003C6  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1466   0003C8  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1467   0003CA  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1468   0003CC  0E01               	movlw	1
  1469   0003CE  1A0A               	xorwf	___aldiv@sign^0,f,c
  1470   0003D0                     l1289:
  1471   0003D0  0E00               	movlw	0
  1472   0003D2  6E0B               	movwf	___aldiv@quotient^0,c
  1473   0003D4  0E00               	movlw	0
  1474   0003D6  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1475   0003D8  0E00               	movlw	0
  1476   0003DA  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1477   0003DC  0E00               	movlw	0
  1478   0003DE  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1479   0003E0  5005               	movf	___aldiv@divisor^0,w,c
  1480   0003E2  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1481   0003E4  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1482   0003E6  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1483   0003E8  B4D8               	btfsc	status,2,c
  1484   0003EA  EFF9  F001         	goto	u511
  1485   0003EE  EFFB  F001         	goto	u510
  1486   0003F2                     u511:
  1487   0003F2  EF31  F002         	goto	l1311
  1488   0003F6                     u510:
  1489   0003F6  0E01               	movlw	1
  1490   0003F8  6E09               	movwf	___aldiv@counter^0,c
  1491   0003FA  EF05  F002         	goto	l1297
  1492   0003FE                     l1295:
  1493   0003FE  90D8               	bcf	status,0,c
  1494   000400  3605               	rlcf	___aldiv@divisor^0,f,c
  1495   000402  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1496   000404  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1497   000406  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1498   000408  2A09               	incf	___aldiv@counter^0,f,c
  1499   00040A                     l1297:
  1500   00040A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1501   00040C  EF0A  F002         	goto	u521
  1502   000410  EF0C  F002         	goto	u520
  1503   000414                     u521:
  1504   000414  EFFF  F001         	goto	l1295
  1505   000418                     u520:
  1506   000418                     l1299:
  1507   000418  90D8               	bcf	status,0,c
  1508   00041A  360B               	rlcf	___aldiv@quotient^0,f,c
  1509   00041C  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1510   00041E  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1511   000420  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1512   000422  5005               	movf	___aldiv@divisor^0,w,c
  1513   000424  5C01               	subwf	___aldiv@dividend^0,w,c
  1514   000426  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1515   000428  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1516   00042A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1517   00042C  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1518   00042E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1519   000430  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1520   000432  A0D8               	btfss	status,0,c
  1521   000434  EF1E  F002         	goto	u531
  1522   000438  EF20  F002         	goto	u530
  1523   00043C                     u531:
  1524   00043C  EF29  F002         	goto	l1307
  1525   000440                     u530:
  1526   000440  5005               	movf	___aldiv@divisor^0,w,c
  1527   000442  5E01               	subwf	___aldiv@dividend^0,f,c
  1528   000444  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1529   000446  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1530   000448  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1531   00044A  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1532   00044C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1533   00044E  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1534   000450  800B               	bsf	___aldiv@quotient^0,0,c
  1535   000452                     l1307:
  1536   000452  90D8               	bcf	status,0,c
  1537   000454  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1538   000456  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1539   000458  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1540   00045A  3205               	rrcf	___aldiv@divisor^0,f,c
  1541   00045C  2E09               	decfsz	___aldiv@counter^0,f,c
  1542   00045E  EF0C  F002         	goto	l1299
  1543   000462                     l1311:
  1544   000462  500A               	movf	___aldiv@sign^0,w,c
  1545   000464  B4D8               	btfsc	status,2,c
  1546   000466  EF37  F002         	goto	u541
  1547   00046A  EF39  F002         	goto	u540
  1548   00046E                     u541:
  1549   00046E  EF41  F002         	goto	l1315
  1550   000472                     u540:
  1551   000472  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1552   000474  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1553   000476  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1554   000478  6C0B               	negf	___aldiv@quotient^0,c
  1555   00047A  0E00               	movlw	0
  1556   00047C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1557   00047E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1558   000480  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1559   000482                     l1315:
  1560   000482  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1561   000486  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1562   00048A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1563   00048E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1564   000492  0012               	return		;funcret
  1565   000494                     __end_of___aldiv:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _LCD_write_string *****************
  1569 ;; Defined at:
  1570 ;;		line 392 in file "LCD.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  string          1    3[COMRAM] PTR unsigned char 
  1573 ;;		 -> STR_4(2), STR_3(7), STR_2(2), STR_1(11), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  i               1    5[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1
  1585 ;;      Params:         1       0       0
  1586 ;;      Locals:         1       0       0
  1587 ;;      Temps:          1       0       0
  1588 ;;      Totals:         3       0       0
  1589 ;;Total ram usage:        3 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 2
  1592 ;; This function calls:
  1593 ;;		_LCD_write_data
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text5
  1600   0009F4                     __ptext5:
  1601                           	callstack 0
  1602   0009F4                     _LCD_write_string:
  1603                           	callstack 28
  1604   0009F4                     
  1605                           ;LCD.c: 395:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  1606   0009F4  6A06               	clrf	LCD_write_string@i^0,c
  1607   0009F6  EF07  F005         	goto	l1373
  1608   0009FA                     l1369:
  1609                           
  1610                           ;LCD.c: 396:         LCD_write_data(string[i]);
  1611   0009FA  5004               	movf	LCD_write_string@string^0,w,c
  1612   0009FC  2406               	addwf	LCD_write_string@i^0,w,c
  1613   0009FE  6E05               	movwf	??_LCD_write_string^0,c
  1614   000A00  C005  FFF6         	movff	??_LCD_write_string,tblptrl
  1615   000A04                     	if	0	;There is only one active tblptr byte
  1616   000A04                     	endif
  1617   000A04                     	if	0	;tblptru may be non-zero
  1618   000A04                     	endif
  1619   000A04                     	if	0	;tblptru may be non-zero
  1620   000A04                     	endif
  1621   000A04  0008               	tblrd		*
  1622   000A06  50F5               	movf	tablat,w,c
  1623   000A08  EC4A  F002         	call	_LCD_write_data
  1624   000A0C                     
  1625                           ;LCD.c: 397:     }
  1626   000A0C  2A06               	incf	LCD_write_string@i^0,f,c
  1627   000A0E                     l1373:
  1628   000A0E  5004               	movf	LCD_write_string@string^0,w,c
  1629   000A10  2406               	addwf	LCD_write_string@i^0,w,c
  1630   000A12  6E05               	movwf	??_LCD_write_string^0,c
  1631   000A14  C005  FFF6         	movff	??_LCD_write_string,tblptrl
  1632   000A18                     	if	0	;There is only one active tblptr byte
  1633   000A18                     	endif
  1634   000A18                     	if	0	;tblptru may be non-zero
  1635   000A18                     	endif
  1636   000A18                     	if	0	;tblptru may be non-zero
  1637   000A18                     	endif
  1638   000A18  0008               	tblrd		*
  1639   000A1A  50F5               	movf	tablat,w,c
  1640   000A1C  0900               	iorlw	0
  1641   000A1E  A4D8               	btfss	status,2,c
  1642   000A20  EF14  F005         	goto	u651
  1643   000A24  EF16  F005         	goto	u650
  1644   000A28                     u651:
  1645   000A28  EFFD  F004         	goto	l1369
  1646   000A2C                     u650:
  1647   000A2C  0012               	return		;funcret
  1648   000A2E                     __end_of_LCD_write_string:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _LCD_write_char *****************
  1652 ;; Defined at:
  1653 ;;		line 404 in file "LCD.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  character       1    wreg     unsigned char 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  character       1    3[COMRAM] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1
  1667 ;;      Params:         0       0       0
  1668 ;;      Locals:         1       0       0
  1669 ;;      Temps:          0       0       0
  1670 ;;      Totals:         1       0       0
  1671 ;;Total ram usage:        1 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 2
  1674 ;; This function calls:
  1675 ;;		_LCD_write_data
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;;		_LCD_write_float
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683   000AD4                     __ptext6:
  1684                           	callstack 0
  1685   000AD4                     _LCD_write_char:
  1686                           	callstack 28
  1687                           
  1688                           ;incstack = 0
  1689                           ;LCD_write_char@character stored from wreg
  1690   000AD4  6E04               	movwf	LCD_write_char@character^0,c
  1691   000AD6                     
  1692                           ;LCD.c: 407:     LCD_write_data(character);
  1693   000AD6  5004               	movf	LCD_write_char@character^0,w,c
  1694   000AD8  EC4A  F002         	call	_LCD_write_data
  1695   000ADC  0012               	return		;funcret
  1696   000ADE                     __end_of_LCD_write_char:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _LCD_write_data *****************
  1700 ;; Defined at:
  1701 ;;		line 104 in file "LCD.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  data            1    wreg     unsigned char 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  data            1    2[COMRAM] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1
  1715 ;;      Params:         0       0       0
  1716 ;;      Locals:         1       0       0
  1717 ;;      Temps:          2       0       0
  1718 ;;      Totals:         3       0       0
  1719 ;;Total ram usage:        3 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 1
  1722 ;; This function calls:
  1723 ;;		_LCD_pulse_clock
  1724 ;; This function is called by:
  1725 ;;		_LCD_write_string
  1726 ;;		_LCD_write_char
  1727 ;;		_LCD_write_variable
  1728 ;;		_LCD_add_character
  1729 ;;		_LCD_write_float
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text7
  1734   000494                     __ptext7:
  1735                           	callstack 0
  1736   000494                     _LCD_write_data:
  1737                           	callstack 28
  1738                           
  1739                           ;incstack = 0
  1740                           ;LCD_write_data@data stored from wreg
  1741   000494  6E03               	movwf	LCD_write_data@data^0,c
  1742   000496                     
  1743                           ;LCD.c: 106:     LATDbits.LATD2 = 1;
  1744   000496  848C               	bsf	140,2,c	;volatile
  1745   000498                     
  1746                           ;LCD.c: 109:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  1747   000498  6A01               	clrf	??_LCD_write_data^0,c
  1748   00049A  AE03               	btfss	LCD_write_data@data^0,7,c
  1749   00049C  D001               	bra	u45
  1750   00049E  2A01               	incf	??_LCD_write_data^0,f,c
  1751   0004A0                     u45:
  1752   0004A0  0E01               	movlw	1
  1753   0004A2  1601               	andwf	??_LCD_write_data^0,f,c
  1754   0004A4  3201               	rrcf	??_LCD_write_data^0,f,c
  1755   0004A6  3201               	rrcf	??_LCD_write_data^0,f,c
  1756   0004A8  508C               	movf	140,w,c	;volatile
  1757   0004AA  1801               	xorwf	??_LCD_write_data^0,w,c
  1758   0004AC  0B7F               	andlw	-129
  1759   0004AE  1801               	xorwf	??_LCD_write_data^0,w,c
  1760   0004B0  6E8C               	movwf	140,c	;volatile
  1761                           
  1762                           ;LCD.c: 110:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  1763   0004B2  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1764   0004B6  0E06               	movlw	6
  1765   0004B8  6E02               	movwf	(??_LCD_write_data+1)^0,c
  1766   0004BA                     u55:
  1767   0004BA  90D8               	bcf	status,0,c
  1768   0004BC  3201               	rrcf	??_LCD_write_data^0,f,c
  1769   0004BE  2E02               	decfsz	(??_LCD_write_data+1)^0,f,c
  1770   0004C0  EF5D  F002         	goto	u55
  1771   0004C4  0E01               	movlw	1
  1772   0004C6  1601               	andwf	??_LCD_write_data^0,f,c
  1773   0004C8  3A01               	swapf	??_LCD_write_data^0,f,c
  1774   0004CA  4601               	rlncf	??_LCD_write_data^0,f,c
  1775   0004CC  4601               	rlncf	??_LCD_write_data^0,f,c
  1776   0004CE  508C               	movf	140,w,c	;volatile
  1777   0004D0  1801               	xorwf	??_LCD_write_data^0,w,c
  1778   0004D2  0BBF               	andlw	-65
  1779   0004D4  1801               	xorwf	??_LCD_write_data^0,w,c
  1780   0004D6  6E8C               	movwf	140,c	;volatile
  1781                           
  1782                           ;LCD.c: 111:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  1783   0004D8  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1784   0004DC  0E05               	movlw	5
  1785   0004DE  6E02               	movwf	(??_LCD_write_data+1)^0,c
  1786   0004E0                     u65:
  1787   0004E0  90D8               	bcf	status,0,c
  1788   0004E2  3201               	rrcf	??_LCD_write_data^0,f,c
  1789   0004E4  2E02               	decfsz	(??_LCD_write_data+1)^0,f,c
  1790   0004E6  EF70  F002         	goto	u65
  1791   0004EA  0E01               	movlw	1
  1792   0004EC  1601               	andwf	??_LCD_write_data^0,f,c
  1793   0004EE  3A01               	swapf	??_LCD_write_data^0,f,c
  1794   0004F0  4601               	rlncf	??_LCD_write_data^0,f,c
  1795   0004F2  508C               	movf	140,w,c	;volatile
  1796   0004F4  1801               	xorwf	??_LCD_write_data^0,w,c
  1797   0004F6  0BDF               	andlw	-33
  1798   0004F8  1801               	xorwf	??_LCD_write_data^0,w,c
  1799   0004FA  6E8C               	movwf	140,c	;volatile
  1800                           
  1801                           ;LCD.c: 112:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  1802   0004FC  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1803   000500  3A01               	swapf	??_LCD_write_data^0,f,c
  1804   000502  0E0F               	movlw	15
  1805   000504  1601               	andwf	??_LCD_write_data^0,f,c
  1806   000506  0E01               	movlw	1
  1807   000508  1601               	andwf	??_LCD_write_data^0,f,c
  1808   00050A  3A01               	swapf	??_LCD_write_data^0,f,c
  1809   00050C  508C               	movf	140,w,c	;volatile
  1810   00050E  1801               	xorwf	??_LCD_write_data^0,w,c
  1811   000510  0BEF               	andlw	-17
  1812   000512  1801               	xorwf	??_LCD_write_data^0,w,c
  1813   000514  6E8C               	movwf	140,c	;volatile
  1814   000516                     
  1815                           ;LCD.c: 115:     LCD_pulse_clock();
  1816   000516  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  1817   00051A                     
  1818                           ;LCD.c: 118:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  1819   00051A  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1820   00051E  90D8               	bcf	status,0,c
  1821   000520  3201               	rrcf	??_LCD_write_data^0,f,c
  1822   000522  90D8               	bcf	status,0,c
  1823   000524  3201               	rrcf	??_LCD_write_data^0,f,c
  1824   000526  90D8               	bcf	status,0,c
  1825   000528  3201               	rrcf	??_LCD_write_data^0,f,c
  1826   00052A  0E01               	movlw	1
  1827   00052C  1601               	andwf	??_LCD_write_data^0,f,c
  1828   00052E  3201               	rrcf	??_LCD_write_data^0,f,c
  1829   000530  3201               	rrcf	??_LCD_write_data^0,f,c
  1830   000532  508C               	movf	140,w,c	;volatile
  1831   000534  1801               	xorwf	??_LCD_write_data^0,w,c
  1832   000536  0B7F               	andlw	-129
  1833   000538  1801               	xorwf	??_LCD_write_data^0,w,c
  1834   00053A  6E8C               	movwf	140,c	;volatile
  1835   00053C                     
  1836                           ;LCD.c: 119:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  1837   00053C  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1838   000540  90D8               	bcf	status,0,c
  1839   000542  3201               	rrcf	??_LCD_write_data^0,f,c
  1840   000544  90D8               	bcf	status,0,c
  1841   000546  3201               	rrcf	??_LCD_write_data^0,f,c
  1842   000548  0E01               	movlw	1
  1843   00054A  1601               	andwf	??_LCD_write_data^0,f,c
  1844   00054C  3A01               	swapf	??_LCD_write_data^0,f,c
  1845   00054E  4601               	rlncf	??_LCD_write_data^0,f,c
  1846   000550  4601               	rlncf	??_LCD_write_data^0,f,c
  1847   000552  508C               	movf	140,w,c	;volatile
  1848   000554  1801               	xorwf	??_LCD_write_data^0,w,c
  1849   000556  0BBF               	andlw	-65
  1850   000558  1801               	xorwf	??_LCD_write_data^0,w,c
  1851   00055A  6E8C               	movwf	140,c	;volatile
  1852   00055C                     
  1853                           ;LCD.c: 120:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  1854   00055C  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1855   000560  90D8               	bcf	status,0,c
  1856   000562  3201               	rrcf	??_LCD_write_data^0,f,c
  1857   000564  0E01               	movlw	1
  1858   000566  1601               	andwf	??_LCD_write_data^0,f,c
  1859   000568  3A01               	swapf	??_LCD_write_data^0,f,c
  1860   00056A  4601               	rlncf	??_LCD_write_data^0,f,c
  1861   00056C  508C               	movf	140,w,c	;volatile
  1862   00056E  1801               	xorwf	??_LCD_write_data^0,w,c
  1863   000570  0BDF               	andlw	-33
  1864   000572  1801               	xorwf	??_LCD_write_data^0,w,c
  1865   000574  6E8C               	movwf	140,c	;volatile
  1866   000576                     
  1867                           ;LCD.c: 121:     LATDbits.LATD4 = (data & 0b00000001) ;
  1868   000576  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1869   00057A  0E01               	movlw	1
  1870   00057C  1601               	andwf	??_LCD_write_data^0,f,c
  1871   00057E  3A01               	swapf	??_LCD_write_data^0,f,c
  1872   000580  508C               	movf	140,w,c	;volatile
  1873   000582  1801               	xorwf	??_LCD_write_data^0,w,c
  1874   000584  0BEF               	andlw	-17
  1875   000586  1801               	xorwf	??_LCD_write_data^0,w,c
  1876   000588  6E8C               	movwf	140,c	;volatile
  1877   00058A                     
  1878                           ;LCD.c: 124:     LCD_pulse_clock();
  1879   00058A  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  1880   00058E  0012               	return		;funcret
  1881   000590                     __end_of_LCD_write_data:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _LCD_init *****************
  1885 ;; Defined at:
  1886 ;;		line 136 in file "LCD.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1
  1900 ;;      Params:         0       0       0
  1901 ;;      Locals:         0       0       0
  1902 ;;      Temps:          2       0       0
  1903 ;;      Totals:         2       0       0
  1904 ;;Total ram usage:        2 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 3
  1907 ;; This function calls:
  1908 ;;		_LCD_clear
  1909 ;;		_LCD_pulse_clock
  1910 ;;		_LCD_write_command
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text8
  1917   00084E                     __ptext8:
  1918                           	callstack 0
  1919   00084E                     _LCD_init:
  1920                           	callstack 27
  1921   00084E                     
  1922                           ;LCD.c: 139:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  1923   00084E  9495               	bcf	149,2,c	;volatile
  1924   000850  948C               	bcf	140,2,c	;volatile
  1925                           
  1926                           ;LCD.c: 140:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  1927   000852  9695               	bcf	149,3,c	;volatile
  1928   000854  968C               	bcf	140,3,c	;volatile
  1929                           
  1930                           ;LCD.c: 141:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
  1931   000856  9895               	bcf	149,4,c	;volatile
  1932   000858  988C               	bcf	140,4,c	;volatile
  1933                           
  1934                           ;LCD.c: 142:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
  1935   00085A  9A95               	bcf	149,5,c	;volatile
  1936   00085C  9A8C               	bcf	140,5,c	;volatile
  1937                           
  1938                           ;LCD.c: 143:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
  1939   00085E  9C95               	bcf	149,6,c	;volatile
  1940   000860  9C8C               	bcf	140,6,c	;volatile
  1941                           
  1942                           ;LCD.c: 144:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
  1943   000862  9E95               	bcf	149,7,c	;volatile
  1944   000864  9E8C               	bcf	140,7,c	;volatile
  1945   000866                     
  1946                           ;LCD.c: 151:     _delay((unsigned long)((60)*(64000000/4000.0)));
  1947   000866  0E05               	movlw	5
  1948   000868  6E06               	movwf	(??_LCD_init+1)^0,c
  1949   00086A  0EDF               	movlw	223
  1950   00086C  6E05               	movwf	??_LCD_init^0,c
  1951   00086E  0EBC               	movlw	188
  1952   000870                     u767:
  1953   000870  2EE8               	decfsz	wreg,f,c
  1954   000872  D7FE               	bra	u767
  1955   000874  2E05               	decfsz	??_LCD_init^0,f,c
  1956   000876  D7FC               	bra	u767
  1957   000878  2E06               	decfsz	(??_LCD_init+1)^0,f,c
  1958   00087A  D7FA               	bra	u767
  1959   00087C                     
  1960                           ;LCD.c: 154:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  1961   00087C  9E8C               	bcf	140,7,c	;volatile
  1962   00087E  9C8C               	bcf	140,6,c	;volatile
  1963   000880  8A8C               	bsf	140,5,c	;volatile
  1964   000882  888C               	bsf	140,4,c	;volatile
  1965   000884                     
  1966                           ;LCD.c: 157:     LCD_pulse_clock();
  1967   000884  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  1968   000888                     
  1969                           ;LCD.c: 160:     _delay((unsigned long)((6)*(64000000/4000.0)));
  1970   000888  0E7D               	movlw	125
  1971   00088A  6E05               	movwf	??_LCD_init^0,c
  1972   00088C  0EAC               	movlw	172
  1973   00088E                     u777:
  1974   00088E  2EE8               	decfsz	wreg,f,c
  1975   000890  D7FE               	bra	u777
  1976   000892  2E05               	decfsz	??_LCD_init^0,f,c
  1977   000894  D7FC               	bra	u777
  1978                           
  1979                           ;LCD.c: 163:     LCD_pulse_clock();
  1980   000896  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  1981   00089A                     
  1982                           ;LCD.c: 166:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  1983   00089A  0E04               	movlw	4
  1984   00089C  6E05               	movwf	??_LCD_init^0,c
  1985   00089E  0E1C               	movlw	28
  1986   0008A0                     u787:
  1987   0008A0  2EE8               	decfsz	wreg,f,c
  1988   0008A2  D7FE               	bra	u787
  1989   0008A4  2E05               	decfsz	??_LCD_init^0,f,c
  1990   0008A6  D7FC               	bra	u787
  1991   0008A8  D000               	nop2	
  1992   0008AA                     
  1993                           ;LCD.c: 169:     LCD_pulse_clock();
  1994   0008AA  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  1995   0008AE                     
  1996                           ;LCD.c: 172:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  1997   0008AE  9E8C               	bcf	140,7,c	;volatile
  1998   0008B0  9C8C               	bcf	140,6,c	;volatile
  1999   0008B2  8A8C               	bsf	140,5,c	;volatile
  2000   0008B4  988C               	bcf	140,4,c	;volatile
  2001   0008B6                     
  2002                           ;LCD.c: 175:     LCD_pulse_clock();
  2003   0008B6  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  2004   0008BA                     
  2005                           ;LCD.c: 178:     LCD_write_command(0x28);
  2006   0008BA  0E28               	movlw	40
  2007   0008BC  ECC8  F002         	call	_LCD_write_command
  2008   0008C0                     
  2009                           ;LCD.c: 179:     LCD_write_command(LCD_display_control);
  2010   0008C0  5025               	movf	_LCD_display_control^0,w,c
  2011   0008C2  ECC8  F002         	call	_LCD_write_command
  2012   0008C6                     
  2013                           ;LCD.c: 180:     LCD_write_command(LCD_entry_mode);
  2014   0008C6  5024               	movf	_LCD_entry_mode^0,w,c
  2015   0008C8  ECC8  F002         	call	_LCD_write_command
  2016   0008CC                     
  2017                           ;LCD.c: 181:     LCD_clear();
  2018   0008CC  EC54  F005         	call	_LCD_clear	;wreg free
  2019   0008D0  0012               	return		;funcret
  2020   0008D2                     __end_of_LCD_init:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _LCD_clear *****************
  2024 ;; Defined at:
  2025 ;;		line 278 in file "LCD.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1
  2039 ;;      Params:         0       0       0
  2040 ;;      Locals:         0       0       0
  2041 ;;      Temps:          1       0       0
  2042 ;;      Totals:         1       0       0
  2043 ;;Total ram usage:        1 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 2
  2046 ;; This function calls:
  2047 ;;		_LCD_write_command
  2048 ;; This function is called by:
  2049 ;;		_LCD_init
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text9
  2054   000AA8                     __ptext9:
  2055                           	callstack 0
  2056   000AA8                     _LCD_clear:
  2057                           	callstack 27
  2058   000AA8                     
  2059                           ;LCD.c: 281:     LCD_write_command(0x01);
  2060   000AA8  0E01               	movlw	1
  2061   000AAA  ECC8  F002         	call	_LCD_write_command
  2062   000AAE                     
  2063                           ;LCD.c: 284:     _delay((unsigned long)(((2300-60))*(64000000/4000000.0)));
  2064   000AAE  0E2F               	movlw	47
  2065   000AB0  6E04               	movwf	??_LCD_clear^0,c
  2066   000AB2  0E8A               	movlw	138
  2067   000AB4                     u797:
  2068   000AB4  2EE8               	decfsz	wreg,f,c
  2069   000AB6  D7FE               	bra	u797
  2070   000AB8  2E04               	decfsz	??_LCD_clear^0,f,c
  2071   000ABA  D7FC               	bra	u797
  2072   000ABC  D000               	nop2	
  2073   000ABE                     
  2074                           ;LCD.c: 287:     LCD_write_command(LCD_entry_mode);
  2075   000ABE  5024               	movf	_LCD_entry_mode^0,w,c
  2076   000AC0  ECC8  F002         	call	_LCD_write_command
  2077   000AC4  0012               	return		;funcret
  2078   000AC6                     __end_of_LCD_clear:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _LCD_cursor_set *****************
  2082 ;; Defined at:
  2083 ;;		line 189 in file "LCD.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  row             1    wreg     unsigned char 
  2086 ;;  column          1    3[COMRAM] unsigned char 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  row             1    4[COMRAM] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1
  2098 ;;      Params:         1       0       0
  2099 ;;      Locals:         1       0       0
  2100 ;;      Temps:          0       0       0
  2101 ;;      Totals:         2       0       0
  2102 ;;Total ram usage:        2 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 2
  2105 ;; This function calls:
  2106 ;;		_LCD_write_command
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;;		_LCD_add_character
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text10
  2114   00093C                     __ptext10:
  2115                           	callstack 0
  2116   00093C                     _LCD_cursor_set:
  2117                           	callstack 28
  2118                           
  2119                           ;incstack = 0
  2120                           ;LCD_cursor_set@row stored from wreg
  2121   00093C  6E05               	movwf	LCD_cursor_set@row^0,c
  2122   00093E                     
  2123                           ;LCD.c: 192:     if(row == 1) column += (0x80-1);
  2124   00093E  0405               	decf	LCD_cursor_set@row^0,w,c
  2125   000940  A4D8               	btfss	status,2,c
  2126   000942  EFA5  F004         	goto	u611
  2127   000946  EFA7  F004         	goto	u610
  2128   00094A                     u611:
  2129   00094A  EFA9  F004         	goto	l29
  2130   00094E                     u610:
  2131   00094E  0E7F               	movlw	127
  2132   000950  2604               	addwf	LCD_cursor_set@column^0,f,c
  2133   000952                     l29:
  2134                           
  2135                           ;LCD.c: 193:     if(row == 2) column += (0xC0-1);
  2136   000952  0E02               	movlw	2
  2137   000954  1805               	xorwf	LCD_cursor_set@row^0,w,c
  2138   000956  A4D8               	btfss	status,2,c
  2139   000958  EFB0  F004         	goto	u621
  2140   00095C  EFB2  F004         	goto	u620
  2141   000960                     u621:
  2142   000960  EFB4  F004         	goto	l30
  2143   000964                     u620:
  2144   000964  0EBF               	movlw	191
  2145   000966  2604               	addwf	LCD_cursor_set@column^0,f,c
  2146   000968                     l30:
  2147                           
  2148                           ;LCD.c: 194:     if(row == 3) column += (0x80+19);
  2149   000968  0E03               	movlw	3
  2150   00096A  1805               	xorwf	LCD_cursor_set@row^0,w,c
  2151   00096C  A4D8               	btfss	status,2,c
  2152   00096E  EFBB  F004         	goto	u631
  2153   000972  EFBD  F004         	goto	u630
  2154   000976                     u631:
  2155   000976  EFBF  F004         	goto	l31
  2156   00097A                     u630:
  2157   00097A  0E93               	movlw	147
  2158   00097C  2604               	addwf	LCD_cursor_set@column^0,f,c
  2159   00097E                     l31:
  2160                           
  2161                           ;LCD.c: 195:     if(row == 4) column += (0xC0+19);
  2162   00097E  0E04               	movlw	4
  2163   000980  1805               	xorwf	LCD_cursor_set@row^0,w,c
  2164   000982  A4D8               	btfss	status,2,c
  2165   000984  EFC6  F004         	goto	u641
  2166   000988  EFC8  F004         	goto	u640
  2167   00098C                     u641:
  2168   00098C  EFCA  F004         	goto	l1365
  2169   000990                     u640:
  2170   000990  0ED3               	movlw	211
  2171   000992  2604               	addwf	LCD_cursor_set@column^0,f,c
  2172   000994                     l1365:
  2173                           
  2174                           ;LCD.c: 198:    LCD_write_command(column);
  2175   000994  5004               	movf	LCD_cursor_set@column^0,w,c
  2176   000996  ECC8  F002         	call	_LCD_write_command
  2177   00099A  0012               	return		;funcret
  2178   00099C                     __end_of_LCD_cursor_set:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _LCD_write_command *****************
  2182 ;; Defined at:
  2183 ;;		line 76 in file "LCD.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  command         1    wreg     unsigned char 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  command         1    2[COMRAM] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1
  2197 ;;      Params:         0       0       0
  2198 ;;      Locals:         1       0       0
  2199 ;;      Temps:          2       0       0
  2200 ;;      Totals:         3       0       0
  2201 ;;Total ram usage:        3 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 1
  2204 ;; This function calls:
  2205 ;;		_LCD_pulse_clock
  2206 ;; This function is called by:
  2207 ;;		_LCD_init
  2208 ;;		_LCD_cursor_set
  2209 ;;		_LCD_clear
  2210 ;;		_LCD_cursor_increment
  2211 ;;		_LCD_cursor_decrement
  2212 ;;		_LCD_configure_lcd_display
  2213 ;;		_LCD_configure_cursor_display
  2214 ;;		_LCD_configure_cursor_blink
  2215 ;;		_LCD_shift_reset
  2216 ;;		_LCD_shift_left
  2217 ;;		_LCD_shift_right
  2218 ;;		_LCD_configure_entry_id
  2219 ;;		_LCD_configure_entry_shift
  2220 ;;		_LCD_add_character
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text11
  2225   000590                     __ptext11:
  2226                           	callstack 0
  2227   000590                     _LCD_write_command:
  2228                           	callstack 28
  2229                           
  2230                           ;incstack = 0
  2231                           ;LCD_write_command@command stored from wreg
  2232   000590  6E03               	movwf	LCD_write_command@command^0,c
  2233   000592                     
  2234                           ;LCD.c: 78:     LATDbits.LATD2 = 0;
  2235   000592  948C               	bcf	140,2,c	;volatile
  2236   000594                     
  2237                           ;LCD.c: 81:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
  2238   000594  6A01               	clrf	??_LCD_write_command^0,c
  2239   000596  AE03               	btfss	LCD_write_command@command^0,7,c
  2240   000598  D001               	bra	u15
  2241   00059A  2A01               	incf	??_LCD_write_command^0,f,c
  2242   00059C                     u15:
  2243   00059C  0E01               	movlw	1
  2244   00059E  1601               	andwf	??_LCD_write_command^0,f,c
  2245   0005A0  3201               	rrcf	??_LCD_write_command^0,f,c
  2246   0005A2  3201               	rrcf	??_LCD_write_command^0,f,c
  2247   0005A4  508C               	movf	140,w,c	;volatile
  2248   0005A6  1801               	xorwf	??_LCD_write_command^0,w,c
  2249   0005A8  0B7F               	andlw	-129
  2250   0005AA  1801               	xorwf	??_LCD_write_command^0,w,c
  2251   0005AC  6E8C               	movwf	140,c	;volatile
  2252                           
  2253                           ;LCD.c: 82:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
  2254   0005AE  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  2255   0005B2  0E06               	movlw	6
  2256   0005B4  6E02               	movwf	(??_LCD_write_command+1)^0,c
  2257   0005B6                     u25:
  2258   0005B6  90D8               	bcf	status,0,c
  2259   0005B8  3201               	rrcf	??_LCD_write_command^0,f,c
  2260   0005BA  2E02               	decfsz	(??_LCD_write_command+1)^0,f,c
  2261   0005BC  EFDB  F002         	goto	u25
  2262   0005C0  0E01               	movlw	1
  2263   0005C2  1601               	andwf	??_LCD_write_command^0,f,c
  2264   0005C4  3A01               	swapf	??_LCD_write_command^0,f,c
  2265   0005C6  4601               	rlncf	??_LCD_write_command^0,f,c
  2266   0005C8  4601               	rlncf	??_LCD_write_command^0,f,c
  2267   0005CA  508C               	movf	140,w,c	;volatile
  2268   0005CC  1801               	xorwf	??_LCD_write_command^0,w,c
  2269   0005CE  0BBF               	andlw	-65
  2270   0005D0  1801               	xorwf	??_LCD_write_command^0,w,c
  2271   0005D2  6E8C               	movwf	140,c	;volatile
  2272                           
  2273                           ;LCD.c: 83:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
  2274   0005D4  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  2275   0005D8  0E05               	movlw	5
  2276   0005DA  6E02               	movwf	(??_LCD_write_command+1)^0,c
  2277   0005DC                     u35:
  2278   0005DC  90D8               	bcf	status,0,c
  2279   0005DE  3201               	rrcf	??_LCD_write_command^0,f,c
  2280   0005E0  2E02               	decfsz	(??_LCD_write_command+1)^0,f,c
  2281   0005E2  EFEE  F002         	goto	u35
  2282   0005E6  0E01               	movlw	1
  2283   0005E8  1601               	andwf	??_LCD_write_command^0,f,c
  2284   0005EA  3A01               	swapf	??_LCD_write_command^0,f,c
  2285   0005EC  4601               	rlncf	??_LCD_write_command^0,f,c
  2286   0005EE  508C               	movf	140,w,c	;volatile
  2287   0005F0  1801               	xorwf	??_LCD_write_command^0,w,c
  2288   0005F2  0BDF               	andlw	-33
  2289   0005F4  1801               	xorwf	??_LCD_write_command^0,w,c
  2290   0005F6  6E8C               	movwf	140,c	;volatile
  2291                           
  2292                           ;LCD.c: 84:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
  2293   0005F8  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  2294   0005FC  3A01               	swapf	??_LCD_write_command^0,f,c
  2295   0005FE  0E0F               	movlw	15
  2296   000600  1601               	andwf	??_LCD_write_command^0,f,c
  2297   000602  0E01               	movlw	1
  2298   000604  1601               	andwf	??_LCD_write_command^0,f,c
  2299   000606  3A01               	swapf	??_LCD_write_command^0,f,c
  2300   000608  508C               	movf	140,w,c	;volatile
  2301   00060A  1801               	xorwf	??_LCD_write_command^0,w,c
  2302   00060C  0BEF               	andlw	-17
  2303   00060E  1801               	xorwf	??_LCD_write_command^0,w,c
  2304   000610  6E8C               	movwf	140,c	;volatile
  2305   000612                     
  2306                           ;LCD.c: 87:     LCD_pulse_clock();
  2307   000612  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  2308   000616                     
  2309                           ;LCD.c: 90:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
  2310   000616  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  2311   00061A  90D8               	bcf	status,0,c
  2312   00061C  3201               	rrcf	??_LCD_write_command^0,f,c
  2313   00061E  90D8               	bcf	status,0,c
  2314   000620  3201               	rrcf	??_LCD_write_command^0,f,c
  2315   000622  90D8               	bcf	status,0,c
  2316   000624  3201               	rrcf	??_LCD_write_command^0,f,c
  2317   000626  0E01               	movlw	1
  2318   000628  1601               	andwf	??_LCD_write_command^0,f,c
  2319   00062A  3201               	rrcf	??_LCD_write_command^0,f,c
  2320   00062C  3201               	rrcf	??_LCD_write_command^0,f,c
  2321   00062E  508C               	movf	140,w,c	;volatile
  2322   000630  1801               	xorwf	??_LCD_write_command^0,w,c
  2323   000632  0B7F               	andlw	-129
  2324   000634  1801               	xorwf	??_LCD_write_command^0,w,c
  2325   000636  6E8C               	movwf	140,c	;volatile
  2326   000638                     
  2327                           ;LCD.c: 91:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
  2328   000638  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  2329   00063C  90D8               	bcf	status,0,c
  2330   00063E  3201               	rrcf	??_LCD_write_command^0,f,c
  2331   000640  90D8               	bcf	status,0,c
  2332   000642  3201               	rrcf	??_LCD_write_command^0,f,c
  2333   000644  0E01               	movlw	1
  2334   000646  1601               	andwf	??_LCD_write_command^0,f,c
  2335   000648  3A01               	swapf	??_LCD_write_command^0,f,c
  2336   00064A  4601               	rlncf	??_LCD_write_command^0,f,c
  2337   00064C  4601               	rlncf	??_LCD_write_command^0,f,c
  2338   00064E  508C               	movf	140,w,c	;volatile
  2339   000650  1801               	xorwf	??_LCD_write_command^0,w,c
  2340   000652  0BBF               	andlw	-65
  2341   000654  1801               	xorwf	??_LCD_write_command^0,w,c
  2342   000656  6E8C               	movwf	140,c	;volatile
  2343   000658                     
  2344                           ;LCD.c: 92:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
  2345   000658  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  2346   00065C  90D8               	bcf	status,0,c
  2347   00065E  3201               	rrcf	??_LCD_write_command^0,f,c
  2348   000660  0E01               	movlw	1
  2349   000662  1601               	andwf	??_LCD_write_command^0,f,c
  2350   000664  3A01               	swapf	??_LCD_write_command^0,f,c
  2351   000666  4601               	rlncf	??_LCD_write_command^0,f,c
  2352   000668  508C               	movf	140,w,c	;volatile
  2353   00066A  1801               	xorwf	??_LCD_write_command^0,w,c
  2354   00066C  0BDF               	andlw	-33
  2355   00066E  1801               	xorwf	??_LCD_write_command^0,w,c
  2356   000670  6E8C               	movwf	140,c	;volatile
  2357   000672                     
  2358                           ;LCD.c: 93:     LATDbits.LATD4 = (command & 0b00000001) ;
  2359   000672  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  2360   000676  0E01               	movlw	1
  2361   000678  1601               	andwf	??_LCD_write_command^0,f,c
  2362   00067A  3A01               	swapf	??_LCD_write_command^0,f,c
  2363   00067C  508C               	movf	140,w,c	;volatile
  2364   00067E  1801               	xorwf	??_LCD_write_command^0,w,c
  2365   000680  0BEF               	andlw	-17
  2366   000682  1801               	xorwf	??_LCD_write_command^0,w,c
  2367   000684  6E8C               	movwf	140,c	;volatile
  2368   000686                     
  2369                           ;LCD.c: 96:     LCD_pulse_clock();
  2370   000686  EC63  F005         	call	_LCD_pulse_clock	;wreg free
  2371   00068A  0012               	return		;funcret
  2372   00068C                     __end_of_LCD_write_command:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _LCD_pulse_clock *****************
  2376 ;; Defined at:
  2377 ;;		line 64 in file "LCD.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1
  2391 ;;      Params:         0       0       0
  2392 ;;      Locals:         0       0       0
  2393 ;;      Temps:          0       0       0
  2394 ;;      Totals:         0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_LCD_write_command
  2401 ;;		_LCD_write_data
  2402 ;;		_LCD_init
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text12
  2407   000AC6                     __ptext12:
  2408                           	callstack 0
  2409   000AC6                     _LCD_pulse_clock:
  2410                           	callstack 28
  2411   000AC6                     
  2412                           ;LCD.c: 66:   LATDbits.LATD3 = 1;
  2413   000AC6  868C               	bsf	140,3,c	;volatile
  2414   000AC8                     
  2415                           ;LCD.c: 67:   _delay((unsigned long)((60)*(64000000/4000000.0)));
  2416   000AC8  0EC0               	movlw	192
  2417   000ACA                     u807:
  2418   000ACA  D000               	nop2	
  2419   000ACC  2EE8               	decfsz	wreg,f,c
  2420   000ACE  D7FD               	bra	u807
  2421   000AD0                     
  2422                           ;LCD.c: 68:   LATDbits.LATD3 = 0;
  2423   000AD0  968C               	bcf	140,3,c	;volatile
  2424   000AD2  0012               	return		;funcret
  2425   000AD4                     __end_of_LCD_pulse_clock:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _DHT11_Start *****************
  2429 ;; Defined at:
  2430 ;;		line 5 in file "DHT.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1
  2444 ;;      Params:         0       0       0
  2445 ;;      Locals:         0       0       0
  2446 ;;      Temps:          1       0       0
  2447 ;;      Totals:         1       0       0
  2448 ;;Total ram usage:        1 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text13
  2458   000A88                     __ptext13:
  2459                           	callstack 0
  2460   000A88                     _DHT11_Start:
  2461                           	callstack 30
  2462   000A88                     
  2463                           ;DHT.c: 7:     TRISAbits.RA0 = 0;
  2464   000A88  9092               	bcf	146,0,c	;volatile
  2465                           
  2466                           ;DHT.c: 8:     LATA0 = 0;
  2467   000A8A  9089               	bcf	3977,0,c	;volatile
  2468   000A8C                     
  2469                           ;DHT.c: 9:     _delay((unsigned long)((18)*(8000000/4000.0)));
  2470   000A8C  0E2F               	movlw	47
  2471   000A8E  6E01               	movwf	??_DHT11_Start^0,c
  2472   000A90  0EC0               	movlw	192
  2473   000A92                     u817:
  2474   000A92  2EE8               	decfsz	wreg,f,c
  2475   000A94  D7FE               	bra	u817
  2476   000A96  2E01               	decfsz	??_DHT11_Start^0,f,c
  2477   000A98  D7FC               	bra	u817
  2478   000A9A                     
  2479                           ;DHT.c: 10:     LATA0 = 1;
  2480   000A9A  8089               	bsf	3977,0,c	;volatile
  2481                           
  2482                           ;DHT.c: 11:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  2483   000A9C  0E0D               	movlw	13
  2484   000A9E                     u827:
  2485   000A9E  2EE8               	decfsz	wreg,f,c
  2486   000AA0  D7FE               	bra	u827
  2487   000AA2  0000               	nop	
  2488   000AA4                     
  2489                           ;DHT.c: 12:     TRISAbits.RA0 = 1;
  2490   000AA4  8092               	bsf	146,0,c	;volatile
  2491   000AA6  0012               	return		;funcret
  2492   000AA8                     __end_of_DHT11_Start:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _DHT11_ReadData *****************
  2496 ;; Defined at:
  2497 ;;		line 16 in file "DHT.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  data            1    1[COMRAM] unsigned char 
  2502 ;;  i               1    0[COMRAM] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1
  2512 ;;      Params:         0       0       0
  2513 ;;      Locals:         2       0       0
  2514 ;;      Temps:          0       0       0
  2515 ;;      Totals:         2       0       0
  2516 ;;Total ram usage:        2 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_main
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text14
  2526   00099C                     __ptext14:
  2527                           	callstack 0
  2528   00099C                     _DHT11_ReadData:
  2529                           	callstack 30
  2530   00099C                     
  2531                           ;DHT.c: 18:   char i,data = 0;
  2532   00099C  6A02               	clrf	DHT11_ReadData@data^0,c
  2533                           
  2534                           ;DHT.c: 19:     for(i=0;i<8;i++)
  2535   00099E  6A01               	clrf	DHT11_ReadData@i^0,c
  2536   0009A0                     l164:
  2537   0009A0  A080               	btfss	128,0,c	;volatile
  2538   0009A2  EFD5  F004         	goto	u341
  2539   0009A6  EFD7  F004         	goto	u340
  2540   0009AA                     u341:
  2541   0009AA  EFD0  F004         	goto	l164
  2542   0009AE                     u340:
  2543   0009AE                     
  2544                           ;DHT.c: 22:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  2545   0009AE  0E14               	movlw	20
  2546   0009B0                     u837:
  2547   0009B0  2EE8               	decfsz	wreg,f,c
  2548   0009B2  D7FE               	bra	u837
  2549   0009B4                     
  2550                           ;DHT.c: 23:         if(PORTAbits.RA0 & 1)
  2551   0009B4  A080               	btfss	128,0,c	;volatile
  2552   0009B6  EFDF  F004         	goto	u351
  2553   0009BA  EFE1  F004         	goto	u350
  2554   0009BE                     u351:
  2555   0009BE  EFE5  F004         	goto	l1125
  2556   0009C2                     u350:
  2557   0009C2                     
  2558                           ;DHT.c: 24:           data = ((data<<1) | 1);
  2559   0009C2  80D8               	bsf	status,0,c
  2560   0009C4  3602               	rlcf	DHT11_ReadData@data^0,f,c
  2561   0009C6  EFE8  F004         	goto	l169
  2562   0009CA                     l1125:
  2563                           
  2564                           ;DHT.c: 26:           data = (data<<1);
  2565   0009CA  5002               	movf	DHT11_ReadData@data^0,w,c
  2566   0009CC  2402               	addwf	DHT11_ReadData@data^0,w,c
  2567   0009CE  6E02               	movwf	DHT11_ReadData@data^0,c
  2568   0009D0                     l169:
  2569   0009D0  B080               	btfsc	128,0,c	;volatile
  2570   0009D2  EFED  F004         	goto	u361
  2571   0009D6  EFEF  F004         	goto	u360
  2572   0009DA                     u361:
  2573   0009DA  EFE8  F004         	goto	l169
  2574   0009DE                     u360:
  2575   0009DE                     
  2576                           ;DHT.c: 28:     }
  2577   0009DE  2A01               	incf	DHT11_ReadData@i^0,f,c
  2578   0009E0  0E07               	movlw	7
  2579   0009E2  6401               	cpfsgt	DHT11_ReadData@i^0,c
  2580   0009E4  EFF6  F004         	goto	u371
  2581   0009E8  EFF8  F004         	goto	u370
  2582   0009EC                     u371:
  2583   0009EC  EFD0  F004         	goto	l164
  2584   0009F0                     u370:
  2585   0009F0                     
  2586                           ;DHT.c: 29:   return data;
  2587   0009F0  5002               	movf	DHT11_ReadData@data^0,w,c
  2588   0009F2  0012               	return		;funcret
  2589   0009F4                     __end_of_DHT11_ReadData:
  2590                           	callstack 0
  2591                           
  2592 ;; *************** function _DHT11_CheckResponse *****************
  2593 ;; Defined at:
  2594 ;;		line 32 in file "DHT.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		None
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1
  2608 ;;      Params:         0       0       0
  2609 ;;      Locals:         0       0       0
  2610 ;;      Temps:          0       0       0
  2611 ;;      Totals:         0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text15
  2622   000A5C                     __ptext15:
  2623                           	callstack 0
  2624   000A5C                     _DHT11_CheckResponse:
  2625                           	callstack 30
  2626   000A5C                     l175:
  2627   000A5C  B080               	btfsc	128,0,c	;volatile
  2628   000A5E  EF33  F005         	goto	u311
  2629   000A62  EF35  F005         	goto	u310
  2630   000A66                     u311:
  2631   000A66  EF2E  F005         	goto	l175
  2632   000A6A                     u310:
  2633   000A6A                     l178:
  2634   000A6A  A080               	btfss	128,0,c	;volatile
  2635   000A6C  EF3A  F005         	goto	u321
  2636   000A70  EF3C  F005         	goto	u320
  2637   000A74                     u321:
  2638   000A74  EF35  F005         	goto	l178
  2639   000A78                     u320:
  2640   000A78                     l181:
  2641   000A78  B080               	btfsc	128,0,c	;volatile
  2642   000A7A  EF41  F005         	goto	u331
  2643   000A7E  EF43  F005         	goto	u330
  2644   000A82                     u331:
  2645   000A82  EF3C  F005         	goto	l181
  2646   000A86                     u330:
  2647   000A86  0012               	return		;funcret
  2648   000A88                     __end_of_DHT11_CheckResponse:
  2649                           	callstack 0
  2650                           
  2651                           	psect	rparam
  2652   000001                     ___rparam_used  equ	1
  2653   000000                     ___param_bank   equ	0
  2654   000000                     __Lparam        equ	__Lrparam
  2655   000000                     __Hparam        equ	__Hrparam
  2656                           
  2657                           	psect	config
  2658                           
  2659                           ; Padding undefined space
  2660   300000                     	org	3145728
  2661   300000  FF                 	db	255
  2662                           
  2663                           ;Config register CONFIG1H @ 0x300001
  2664                           ;	Oscillator
  2665                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  2666                           ;	Fail-Safe Clock Monitor Enable bit
  2667                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2668                           ;	Internal/External Oscillator Switchover bit
  2669                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2670   300001                     	org	3145729
  2671   300001  08                 	db	8
  2672                           
  2673                           ;Config register CONFIG2L @ 0x300002
  2674                           ;	Power-up Timer Enable bit
  2675                           ;	PWRT = OFF, PWRT disabled
  2676                           ;	Brown-out Reset Enable bits
  2677                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2678                           ;	Brown-out Reset Voltage bits
  2679                           ;	BORV = 3, Minimum Setting
  2680   300002                     	org	3145730
  2681   300002  19                 	db	25
  2682                           
  2683                           ;Config register CONFIG2H @ 0x300003
  2684                           ;	Watchdog Timer Enable bit
  2685                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2686                           ;	Watchdog Timer Postscale Select bits
  2687                           ;	WDTPS = 32768, 1:32768
  2688   300003                     	org	3145731
  2689   300003  1E                 	db	30
  2690                           
  2691                           ; Padding undefined space
  2692   300004                     	org	3145732
  2693   300004  FF                 	db	255
  2694                           
  2695                           ;Config register CONFIG3H @ 0x300005
  2696                           ;	CCP2 MUX bit
  2697                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2698                           ;	PORTB A/D Enable bit
  2699                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  2700                           ;	Low-Power Timer1 Oscillator Enable bit
  2701                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2702                           ;	MCLR Pin Enable bit
  2703                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2704   300005                     	org	3145733
  2705   300005  83                 	db	131
  2706                           
  2707                           ;Config register CONFIG4L @ 0x300006
  2708                           ;	Stack Full/Underflow Reset Enable bit
  2709                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2710                           ;	Single-Supply ICSP Enable bit
  2711                           ;	LVP = OFF, Single-Supply ICSP disabled
  2712                           ;	Boot Block Size Select bits
  2713                           ;	BBSIZ = BB256, 256 Word
  2714                           ;	Extended Instruction Set Enable bit
  2715                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2716                           ;	Background Debugger Enable bit
  2717                           ;	DEBUG = 0x1, unprogrammed default
  2718   300006                     	org	3145734
  2719   300006  81                 	db	129
  2720                           
  2721                           ; Padding undefined space
  2722   300007                     	org	3145735
  2723   300007  FF                 	db	255
  2724                           
  2725                           ;Config register CONFIG5L @ 0x300008
  2726                           ;	Code Protection bit
  2727                           ;	CP0 = OFF, Block 0 not code-protected
  2728                           ;	Code Protection bit
  2729                           ;	CP1 = OFF, Block 1 not code-protected
  2730   300008                     	org	3145736
  2731   300008  03                 	db	3
  2732                           
  2733                           ;Config register CONFIG5H @ 0x300009
  2734                           ;	Boot Block Code Protection bitProtect Boot
  2735                           ;	CPB = OFF, Boot block not code-protected
  2736                           ;	Data EEPROM Code Protection bit
  2737                           ;	CPD = OFF, Data EEPROM not code-protected
  2738   300009                     	org	3145737
  2739   300009  C0                 	db	192
  2740                           
  2741                           ;Config register CONFIG6L @ 0x30000A
  2742                           ;	Write Protection bit
  2743                           ;	WRT0 = OFF, Block 0 not write-protected
  2744                           ;	Write Protection bit
  2745                           ;	WRT1 = OFF, Block 1 not write-protected
  2746   30000A                     	org	3145738
  2747   30000A  03                 	db	3
  2748                           
  2749                           ;Config register CONFIG6H @ 0x30000B
  2750                           ;	Configuration Register Write Protection bit
  2751                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2752                           ;	Boot Block Write Protection bit
  2753                           ;	WRTB = OFF, Boot block not write-protected
  2754                           ;	Data EEPROM Write Protection bit
  2755                           ;	WRTD = OFF, Data EEPROM not write-protected
  2756   30000B                     	org	3145739
  2757   30000B  E0                 	db	224
  2758                           
  2759                           ;Config register CONFIG7L @ 0x30000C
  2760                           ;	Table Read Protection bit
  2761                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  2762                           ;	Table Read Protection bit
  2763                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  2764   30000C                     	org	3145740
  2765   30000C  03                 	db	3
  2766                           
  2767                           ;Config register CONFIG7H @ 0x30000D
  2768                           ;	Boot Block Table Read Protection bit
  2769                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  2770   30000D                     	org	3145741
  2771   30000D  40                 	db	64
  2772                           tosu	equ	0xFFF
  2773                           tosh	equ	0xFFE
  2774                           tosl	equ	0xFFD
  2775                           stkptr	equ	0xFFC
  2776                           pclatu	equ	0xFFB
  2777                           pclath	equ	0xFFA
  2778                           pcl	equ	0xFF9
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           indf0	equ	0xFEF
  2786                           postinc0	equ	0xFEE
  2787                           postdec0	equ	0xFED
  2788                           preinc0	equ	0xFEC
  2789                           plusw0	equ	0xFEB
  2790                           fsr0h	equ	0xFEA
  2791                           fsr0l	equ	0xFE9
  2792                           wreg	equ	0xFE8
  2793                           indf1	equ	0xFE7
  2794                           postinc1	equ	0xFE6
  2795                           postdec1	equ	0xFE5
  2796                           preinc1	equ	0xFE4
  2797                           plusw1	equ	0xFE3
  2798                           fsr1h	equ	0xFE2
  2799                           fsr1l	equ	0xFE1
  2800                           bsr	equ	0xFE0
  2801                           indf2	equ	0xFDF
  2802                           postinc2	equ	0xFDE
  2803                           postdec2	equ	0xFDD
  2804                           preinc2	equ	0xFDC
  2805                           plusw2	equ	0xFDB
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      37
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    LCD_write_string@string	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[2]), STR_3(CODE[7]), STR_4(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_LCD_write_variable
    _LCD_write_variable->___aldiv
    _LCD_write_string->_LCD_write_data
    _LCD_write_char->_LCD_write_data
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command
    _LCD_cursor_set->_LCD_write_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2146
                                             25 COMRAM     6     6      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                     _LCD_cursor_set
                           _LCD_init
                     _LCD_write_char
                   _LCD_write_string
                 _LCD_write_variable
 ---------------------------------------------------------------------------------
 (1) _LCD_write_variable                                  11     6      5    1125
                                             14 COMRAM    11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     300
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     304
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     3     2      1     214
                                              3 COMRAM     3     2      1
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (1) _LCD_write_char                                       1     1      0     135
                                              3 COMRAM     1     1      0
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (2) _LCD_write_data                                       3     3      0     120
                                              0 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     240
                                              4 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     120
                                              3 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _LCD_cursor_set                                       2     1      1     265
                                              3 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_write_command                                    3     3      0     120
                                              0 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (3) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _LCD_cursor_set
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
       _LCD_write_command
     _LCD_pulse_clock
     _LCD_write_command
   _LCD_write_char
     _LCD_write_data
       _LCD_pulse_clock
   _LCD_write_string
     _LCD_write_data
   _LCD_write_variable
     _LCD_write_data
     ___aldiv
     ___almod
     ___lmul

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     31      37     29.1%
BITBIGSFRh         115      0       0      0.0%
BITBIGSFRll          8      0       0      0.0%
BITBIGSFRlh          2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      37      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Nov 14 22:55:55 2024

                  main@H_decimal 001D                               l20 068A                               l30 0968  
                             l31 097E                               l23 058E                               l17 0AD2  
                             l33 099A                               l26 08D0                               l29 0952  
                             l57 0AC4                               l90 0ADC                               l87 0A2C  
                             u15 059C                               u25 05B6                               u35 05DC  
                             u45 04A0                               u55 04BA                               u65 04E0  
                            l102 02EA                              l109 0388                              l172 09F2  
                            l164 09A0                              l181 0A78                              l175 0A5C  
                            l159 0AA6                              l184 0A86                              l169 09D0  
                            l178 0A6A                              l266 0492                              l198 092A  
                            l279 0774                              l199 093A                              l901 055C  
                            l911 0ABE                              l903 0576                              l905 058A  
                            l907 0AA8                              l909 0AAE                              l871 0AC8  
                            l873 0AD0                              l881 0616                              l883 0638  
                            l875 0592                              l891 0496                              l869 0AC6  
                            l885 0658                              l877 0594                              l893 0498  
                            l887 0672                              l879 0612                              l895 0516  
                            l889 0686                              l897 051A                              l899 053C  
                            u310 0A6A                              u311 0A66                              u320 0A78  
                            u321 0A74                              u330 0A86                              u331 0A82  
                            u340 09AE                              u500 03BC                              u341 09AA  
                            u501 03B8                              u350 09C2                              u510 03F6  
                            u351 09BE                              u511 03F2                              u360 09DE  
                            u520 0418                              u600 0754                              u361 09DA  
                            u521 0414                              u601 0750                              u370 09F0  
                            u610 094E                              u530 0440                              u371 09EC  
                            u611 094A                              u531 043C                              u620 0964  
                            u540 0472                              u700 0388                              u621 0960  
                            u541 046E                              u701 0384                              u630 097A  
                            u550 069C                              u470 08F0                              u631 0976  
                            u551 0698                              u471 08EC                              u640 0990  
                            u560 06BE                              u480 092A                              u641 098C  
                            u561 06BA                              u481 0926                              u650 0A2C  
                            u490 039A                              u570 06E4                              u651 0A28  
                            u491 0396                              u571 06E0                              u580 0706  
                            u660 0226                              u581 0702                              u661 0222  
                            u590 0724                              u670 028C                              u807 0ACA  
                            u591 0720                              u671 0288                              u680 02DA  
                            u817 0A92                              u681 02D6                              u690 034A  
                            u827 0A9E                              u691 0346                              u837 09B0  
                            u757 083A                              u767 0870                              u777 088E  
                            u787 08A0                              u797 0AB4                              wreg 0FE8  
                           l1011 0880                             l1003 084E                             l1021 08AA  
                           l1013 0882                             l1005 0866                             l1111 0A5C  
                           l1103 0A88                             l1031 08B6                             l1023 08AE  
                           l1015 0884                             l1007 087C                             l1121 09B4  
                           l1113 099C                             l1105 0A8C                             l1033 08BA  
                           l1025 08B0                             l1017 0888                             l1009 087E  
                           l1131 09F0                             l1123 09C2                             l1107 0A9A  
                           l1035 08C0                             l1027 08B2                             l1019 089A  
                           l1125 09CA                             l1109 0AA4                             l1037 08C6  
                           l1029 08B4                             l1061 0AD6                             l1301 0422  
                           l1127 09DE                             l1119 09AE                             l1039 08CC  
                           l1303 0440                             l1311 0462                             l1129 09E0  
                           l1313 0472                             l1305 0450                             l1321 068E  
                           l1401 0302                             l1315 0482                             l1307 0452  
                           l1331 06CE                             l1323 069C                             l1411 0378  
                           l1403 0336                             l1309 045C                             l1341 0724  
                           l1333 06E4                             l1325 06AC                             l1405 0338  
                           l1351 0764                             l1343 0734                             l1335 06EC  
                           l1327 06B0                             l1319 068C                             l1271 0900  
                           l1407 034A                             l1361 097A                             l1281 03AA  
                           l1345 073E                             l1337 06F8                             l1329 06BE  
                           l1273 090A                             l1265 08D2                             l1409 0376  
                           l1363 0990                             l1355 093E                             l1371 0A0C  
                           l1291 03E0                             l1283 03AE                             l1275 038A  
                           l1339 0706                             l1347 0744                             l1267 08E2  
                           l1451 077E                             l1365 0994                             l1357 094E  
                           l1373 0A0E                             l1293 03F6                             l1285 03BC  
                           l1277 038C                             l1349 0754                             l1269 08F0  
                           l1381 025A                             l1461 0796                             l1453 0782  
                           l1359 0964                             l1367 09F4                             l1295 03FE  
                           l1287 03CC                             l1279 039A                             l1391 02C8  
                           l1383 026A                             l1375 0216                             l1471 07C6  
                           l1463 079C                             l1455 0786                             l1369 09FA  
                           l1297 040A                             l1289 03D0                             l1385 026C  
                           l1377 0218                             l1481 07F8                             l1473 07CE  
                           l1465 07A2                             l1457 078A                             l1449 0776  
                           l1299 0418                             l1395 02DE                             l1379 0226  
                           l1491 0830                             l1483 080A                             l1475 07E0  
                           l1467 07AC                             l1459 0790                             l1397 02E4  
                           l1389 0290                             l1485 0812                             l1477 07E6  
                           l1469 07B4                             l1399 02FA                             l1487 0824  
                           l1479 07F0                             l1489 082A                             STR_1 0201  
                           STR_2 0213                             STR_3 020C                             STR_4 0213  
                           _main 0776                    main@T_decimal 001F                             start 0000  
               ??_DHT11_ReadData 0001                     ___param_bank 0000                 __end_of_LCD_init 08D2  
                __end_of___aldiv 0494                  __end_of___almod 0776                            ?_main 0001  
                          _LATA0 7C48              ___lmul@multiplicand 0005                            tablat 0FF5  
                          status 0FD8                  __initialization 0A2E                     __end_of_main 084E  
              ?_LCD_write_string 0004                           ??_main 001A                    __activetblptr 0001  
             ??_LCD_write_string 0005                __end_of_LCD_clear 0AC6                           _ADCON1 0FC1  
            _DHT11_CheckResponse 0A5C           LCD_write_string@string 0004                           _OSCCON 0FD3  
LCD_write_variable@temp_variable 0016                           ___lmul 08D2                        ??___aldiv 0009  
                      ??___almod 0009             ?_DHT11_CheckResponse 0001                           isa$std 0001  
                   __pdataCOMRAM 0024                     __mediumconst 0000                           tblptrh 0FF7  
                         tblptrl 0FF6                           tblptru 0FF8                       __accesstop 0080  
        __end_of__initialization 0A4E                        ?_LCD_init 0001                    ___rparam_used 0001  
                 __pcstackCOMRAM 0001            ??_DHT11_CheckResponse 0001                   _LCD_entry_mode 0024  
              _LCD_write_command 0590                   _LCD_cursor_set 093C               ?_LCD_write_command 0001  
     __end_of_LCD_write_variable 038A              ??_LCD_write_command 0001                       ??_LCD_init 0005  
      __end_of_LCD_write_command 068C                          ?___lmul 0001           __end_of_LCD_cursor_set 099C  
                 ___lmul@product 0009         LCD_write_command@command 0003                    ??_DHT11_Start 0001  
                        __Hparam 0000                          __Lparam 0000                          ___aldiv 038A  
                        ___almod 068C                  ?_LCD_cursor_set 0004                   _LCD_write_char 0AD4  
                 _LCD_write_data 0494       LCD_write_variable@variable 000F                     __psmallconst 0200  
                        __pcinit 0A2E                          __ramtop 0200                          __ptext0 0776  
                        __ptext1 0216                          __ptext2 08D2                          __ptext3 068C  
                        __ptext4 038A                          __ptext5 09F4                          __ptext6 0AD4  
                        __ptext7 0494                          __ptext8 084E                          __ptext9 0AA8  
               ___aldiv@dividend 0001                        _LCD_clear 0AA8             end_of_initialization 0A4E  
           LCD_cursor_set@column 0004              _LCD_display_control 0025           __end_of_LCD_write_char 0ADE  
         __end_of_LCD_write_data 0590                 ___aldiv@quotient 000B              __end_of_DHT11_Start 0AA8  
                      _PORTAbits 0F80                ??_LCD_pulse_clock 0001                        _TRISAbits 0F92  
                      _TRISDbits 0F95                       ?_LCD_clear 0001               DHT11_ReadData@data 0002  
                ?_LCD_write_char 0001                  ?_LCD_write_data 0001                   __end_of___lmul 093C  
                  __pidataCOMRAM 0ADE              start_initialization 0A2E               _LCD_write_variable 0216  
            LCD_write_variable@i 0014                      _DHT11_Start 0A88      __end_of_DHT11_CheckResponse 0A88  
            ?_LCD_write_variable 000F                         ??___lmul 0009          LCD_write_char@character 0004  
           ??_LCD_write_variable 0014                      __pbssCOMRAM 0020                      ??_LCD_clear 0004  
               _LCD_write_string 09F4                 ??_LCD_cursor_set 0005                         ?___aldiv 0001  
                       ?___almod 0001                 ___almod@dividend 0001                   _DHT11_ReadData 099C  
                    __smallconst 0200               LCD_write_data@data 0003                  ___aldiv@divisor 0005  
                ___aldiv@counter 0009                         _LATDbits 0F8C                         _LCD_init 084E  
                _LCD_pulse_clock 0AC6           __end_of_DHT11_ReadData 09F4                        main@H_num 001C  
                      main@T_num 001E                ___lmul@multiplier 0001                 ??_LCD_write_char 0004  
               ??_LCD_write_data 0001                         __Hrparam 0000         LCD_write_variable@digits 0015  
                      modff@F522 0020                         __Lrparam 0000                     __Lsmallconst 0200  
              LCD_cursor_set@row 0005                  ?_DHT11_ReadData 0001                  DHT11_ReadData@i 0001  
                       __ptext10 093C                         __ptext11 0590                         __ptext12 0AC6  
                       __ptext13 0A88                         __ptext14 099C                         __ptext15 0A5C  
                ___almod@divisor 0005                  ___almod@counter 0009          __end_of_LCD_pulse_clock 0AD4  
                   ?_DHT11_Start 0001                         isa$xinst 0000         __end_of_LCD_write_string 0A2E  
  LCD_write_variable@left_offset 0013                LCD_write_string@i 0006                     ___aldiv@sign 000A  
                   ___almod@sign 000A                 ?_LCD_pulse_clock 0001  
